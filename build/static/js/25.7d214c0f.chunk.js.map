{"version":3,"sources":["loader/loader.js","components/Users/index.js"],"names":["LoaderClass","type","color","height","width","className","React","Component","Users","useState","singleUser","setSingleUser","modal3","setModal3","modal4","setModal4","modal2","setModal2","modal5","setModal5","toggle4","toggle3","toggle2","toggle5","list","setList","allList","setAllList","country","setCountry","userInformation","setUserInformation","getuserInformation","setGetUserInformation","Password","setPassword","loader","setLoader","firstname","setFirstName","lastname","setLastName","dob","setDob","countries","setCountries","nationality","setNationality","town","setTown","roadname","setRoadname","email","setEmail","address","setAddress","countriesofResidence","setCountriesofResidence","mobile","setMobile","emailError","setEmailError","nameError","setNameError","countryError","setCountryError","singleUsergetCountry","setuserCountry","search","searchbyEmail","testSearch","setTestSearch","searchEmail","setSearchEmail","ids","setIds","useEffect","getData","getCountries","token","localStorage","getItem","to","token1","replace","config","headers","axios","get","common","api_url","then","response","dataJson","JSON","stringify","jsonPrser","parse","status","data","catch","error","console","log","role","isLoggedIn","data-toggle","onClick","id","placeholder","value","onChange","e","length","filter","nameData","name","toLowerCase","includes","searchTesting","target","aria-label","searchEmailFun","val","map","index","key","icon","placement","style","fontSize","phone","road_name","GetUserById","outline","container","viewForDeleteData","get_countries","viewData","created_at","status_id","zIndex","centered","isOpen","toggle","row","htmlFor","sm","defaultValue","element","ountriesofResidence","payload","country_of_residence","post","res","swal","err","UpdateUserById","scrollable","size","delete","users","setState","deleteUserById","backdrop","keyboard","evt","preventDefault","test","password"],"mappings":"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","file":"static/js/25.7d214c0f.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\nimport './loader.css'\r\nexport default class LoaderClass extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n        height={100}\r\n        width={100}\r\n        className=\"loader_position\"\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport common from \"../../common/common\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport swal from 'sweetalert';\r\nimport LoaderClass from '../../loader/loader'\r\nimport './index.css';\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  CustomInput,\r\n  Label,\r\n  FormGroup,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\n\r\nfunction Users() {\r\n\r\n  const [singleUser, setSingleUser] = useState([]);\r\n\r\n\r\n\r\n\r\n  const [modal3, setModal3] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [modal5, setModal5] = useState(false);\r\n  const [notify1, setNotify1] = useState(false);\r\n\r\n  const toggle4 = () => setModal4(!modal4);\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const toggle5 = () => setModal5(!modal5);\r\n\r\n\r\n  const [list, setList] = useState([]);\r\n  const [allList, setAllList] = useState([]);\r\n  const [country, setCountry] = useState([]);\r\n  const [userInformation, setUserInformation] = useState([]);\r\n  const [getuserInformation, setGetUserInformation] = useState(\"\");\r\n\r\n\r\n  //add form for users\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [roomType, setRoomType] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  //\r\n  const [firstname, setFirstName] = useState(\"\");\r\n  const [lastname, setLastName] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [countries, setCountries] = useState(\"\");\r\n  const [nationality, setNationality] = useState(\"\");\r\n  const [town, setTown] = useState(\"\");\r\n  const [roadname, setRoadname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [countriesofResidence, setCountriesofResidence] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [emailError, setEmailError] = useState('');\r\n  const [nameError, setNameError] = useState('');\r\n  const [countryError, setCountryError] = useState('');\r\n  const [singleUsergetCountry, setuserCountry] = useState('');\r\n  const [myname, setMyname] = useState('');\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchbyEmail, setSearchbyEmail] = useState(\"\");\r\n  const [testSearch,setTestSearch] = useState(\"\");\r\n  const [searchEmail,setSearchEmail] = useState(\"\");\r\n  const [searchRole,setSearchRole] =useState(\"\");\r\n  const [searchbyRole, setSearchbyRole] = useState(\"\");\r\n  const [ids, setIds] = useState(\"\");\r\n\r\n\r\n  const emptySetVariable = () => {\r\n    setEmailError('');\r\n    setNameError('');\r\n    setCountryError('');\r\n  }\r\n\r\n  const searchTesting=(e)=>{\r\n    setTestSearch(e);\r\n    if(testSearch.length!=1){\r\n      setList([]);\r\n      setList( allList.filter(\r\n      (nameData) => (\r\n        nameData.name.toLowerCase().includes(testSearch.toLowerCase()))\r\n      ));\r\n      }else{\r\n        setList(allList);\r\n      }\r\n  }\r\n\r\n  const searchEmailFun=(e)=>{\r\n    setSearchEmail(e);\r\n    if(searchEmail.length!=1){\r\n     setList([]);   \r\n      setList( allList.filter(\r\n      (nameData) => (\r\n        nameData.email.toLowerCase().includes(searchEmail.toLowerCase()))\r\n      ));\r\n      }else{\r\n        setList(allList);\r\n      }\r\n  }\r\n\r\n  const searchRoleFun =(e)=>{\r\n    setSearchRole(e);\r\n    if(searchRole){\r\n      setList([]);\r\n      setList( allList.filter(\r\n      (data) => (\r\n        data.role(searchRole))\r\n      ));\r\n      }else{\r\n        setList(allList);\r\n      }\r\n  }\r\n\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    emptySetVariable();\r\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    let te = /^[a-zA-Z]+$/;\r\n    if (email == '') {\r\n      setEmailError('Email is required!');\r\n      return;\r\n    } else if (!(re.test(email))) {\r\n      setEmailError('Enter valid email!!');\r\n      return;\r\n    }\r\n\r\n    if (firstname == '') {\r\n      setNameError('Name is required!');\r\n      return;\r\n    } else if (!(te.test(firstname))) {\r\n      setNameError('Enter Letters only!');\r\n      return;\r\n    }\r\n    if (countries == '') {\r\n      setCountryError('Country is required!');\r\n      return;\r\n    }\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/, '');\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\r\n    let payload = {\r\n      name: firstname,\r\n      phone: mobile,\r\n      town: town,\r\n      country_of_residence: countriesofResidence,\r\n      country: countries,\r\n      nationality: nationality,\r\n      dob: dob,\r\n      email: email,\r\n      road_name: roadname,\r\n      address: address,\r\n      password: Password\r\n    }\r\n\r\n    axios.post(`${common.api_url}register`, payload, config)\r\n      .then(res => {\r\n        if (res.data.data) {\r\n          toggle3(false)\r\n          swal(\"User Added Successfully!\", \"success\");\r\n          getData();\r\n          return res.data.data;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getCountries();\r\n\r\n  }, [])\r\n\r\n  const getData = () => {\r\n    let token = localStorage.getItem(\"key\");\r\n    if (token) {\r\n      var token1 = token.replace(/\"/g, \"\");\r\n    } else {\r\n      return <Redirect to='/' />\r\n    }\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'applicatio/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}user-list`, config).then((response) => {\r\n      var dataJson = JSON.stringify(response);\r\n      var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setList(jsonPrser.data.data);\r\n        setAllList(jsonPrser.data.data);\r\n        setLoader(false)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n  }\r\n\r\n\r\n  const getCountries = () => {\r\n\r\n    axios.get(`${common.api_url}countries`).then((response) => {\r\n      var dataJson = JSON.stringify(response);\r\n      var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setCountry(jsonPrser.data.data)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n  }\r\n\r\n//edit\r\n  const GetUserById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    // console.log(token);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}user-list/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setGetUserInformation(jsonPrser.data.data)\r\n        setFirstName(jsonPrser.data.data.firstname);\r\n        setMobile(jsonPrser.data.data.phone);\r\n        setNationality(jsonPrser.data.data.nationality);\r\n        setAddress(jsonPrser.data.data.address);\r\n        setCountries(jsonPrser.data.data.country);\r\n        setRoadname(jsonPrser.data.data.road_name);\r\n        setDob(jsonPrser.data.data.dob);\r\n        setTown(jsonPrser.data.data.town);\r\n        setIds(jsonPrser.data.data.id);\r\n        toggle5(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n\r\n }\r\n\r\n\r\n  const UpdateUserById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    let payload = {\r\n      name: firstname,\r\n      phone: mobile,\r\n      town: town,\r\n      country_of_residence: countriesofResidence,\r\n      country: countries,\r\n      nationality: nationality,\r\n      dob: dob,\r\n      road_name: roadname,\r\n      address: address,\r\n\r\n    }\r\n    axios.post(`${common.api_url}user/update/${ids}`, payload, config)\r\n    .then(res => {\r\n      if (res) {\r\n        toggle5(false);\r\n        getData()\r\n        swal(\"User Updated Successfully!\", \"success\");\r\n        return res.data.data;\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n    }\r\n\r\n  //deleted\r\n  const viewForDeleteData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}user-list/${id}`, config).\r\n      then((response) => {\r\n        let dataJson = JSON.stringify(response);\r\n        let jsonPrser = JSON.parse(dataJson);\r\n        if (jsonPrser.status == 200) {\r\n          setUserInformation(jsonPrser.data.data);\r\n          toggle4(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, 'errror');\r\n      });\r\n\r\n  }\r\n\r\n  //view\r\n  const viewData = (id) => {\r\n\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}user-list/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setSingleUser(jsonPrser.data.data)\r\n        setuserCountry(jsonPrser.data.data.get_countries[0])\r\n        toggle2(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  const deleteUserById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\r\n    axios.delete(`${common.api_url}user/${id}`, config)\r\n      .then(res => {\r\n\r\n        if (res) {\r\n          toggle4(false);\r\n          swal(\"User deleted Successfully!\");\r\n          getData();\r\n          const users = res.data;\r\n          this.setState({ users });\r\n        }\r\n      }, err => {\r\n        if (err && err.response.data) {\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  let role = localStorage.getItem(\"role\");\r\n  let isLoggedIn = localStorage.getItem(\"IsLoggedIn\")\r\n  if (role && isLoggedIn) {\r\n    if (loader == true) {\r\n      return (\r\n        <Fragment>\r\n          <LoaderClass className=\"loader_position\" />\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n\r\n        <Fragment>\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"m-0\">Users</h1>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <ol className=\"breadcrumb float-sm-right\">\r\n                      <li className=\"breadcrumb-item\"><Button className=\"m-2\" color=\"second\" data-toggle=\"modal\" onClick={toggle3} >\r\n                        Add User\r\n                    </Button>\r\n                      </li>\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>\r\n                              <input type=\"text\" className=\"form-control-sm\" placeholder=\"search by Name\" value={testSearch} onChange={e => searchTesting(e.target.value,this)} aria-label=\"Username\" /></th>\r\n                            <th>\r\n                              <input type=\"text\" className=\"form-control-sm\" placeholder=\"search by Email\" value={searchEmail} onChange={e => searchEmailFun(e.target.value)} aria-label=\"Username\" /></th>\r\n                              <th></th>\r\n                            <th>\r\n                            {/* <input type=\"text\" className=\"form-control-sm\" placeholder=\"search by Role\" value={searchRole} onChange={(e=>searchRoleFun(e.target.value))} aria-label=\"Username\" /> */}\r\n\r\n                            </th>\r\n                            \r\n                            <th></th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Sl</th>\r\n                            <th>Action</th>\r\n                            <th>Name</th>\r\n                            <th>Email(s)</th>\r\n                            <th>Created at</th>\r\n                            <th>Role</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        {list.filter((val) => {\r\n                          if (search && searchbyEmail == \"\") {\r\n                            return val;\r\n                          } else if (val.name.toLowerCase().includes(search.toLowerCase()) ||  val.email == searchbyEmail) {\r\n                            return val;\r\n                          }\r\n                        }).map((data, index) =>\r\n                          <tbody key={index}>\r\n                            <tr>\r\n                              <td>{index+1}</td>\r\n                              <td>  <FontAwesomeIcon\r\n                                icon={['far', 'edit']}\r\n                                className=\"font-size-xxl\"\r\n                                placement=\"top\"\r\n                                style={{fontSize:15,color:'#0AEE23'}}\r\n                                onClick={() => GetUserById(data.id)}\r\n                                id=\"tooltipforedit\"\r\n                                outline={data.id} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipforedit\">\r\n                                  edit\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                         <FontAwesomeIcon\r\n                                  icon={['far', 'trash-alt']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#EE180A '}}\r\n                                  id=\"tooltipfordelete\"\r\n                                  value={data.id}\r\n                                  onClick={() => viewForDeleteData(data.id)}\r\n                                  outline={data.id}\r\n                                />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipfordelete\">\r\n                                  delete\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                        <FontAwesomeIcon\r\n                                  icon={['far', 'eye']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#0710CD '}}\r\n                                  id=\"tooltipforview\"\r\n                                  outline={data.id} onClick={() => viewData(data.id)} /> <UncontrolledTooltip\r\n                                    placement=\"top\"\r\n                                    container=\"body\"\r\n                                    target=\"tooltipforview\">\r\n                                  view\r\n                     </UncontrolledTooltip></td>\r\n                              <td>{data.name}</td>\r\n                              <td>{data.email}</td>\r\n                              <td>{data.created_at}</td>\r\n                              <td>{common.role[data.role]}</td>\r\n                              <td className={common.status[data.status_id]}>{common.status[data.status_id]}</td>\r\n\r\n                              {/* edit section for user */}\r\n                              <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal5} toggle={toggle5}>\r\n                                <ModalHeader toggle={toggle5}>Edit User</ModalHeader>\r\n                                <ModalBody>\r\n\r\n\r\n                                  <Form>\r\n                                    <FormGroup row>\r\n                                     \r\n                                      <Label htmlFor=\"personCapacity\" sm={1}>Full Name</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          id=\"firstName\"\r\n                                          name=\"customSelect\"\r\n                                          value={firstname}\r\n                                          defaultValue={getuserInformation.name}\r\n                                          onChange={e => setFirstName(e.target.value)}\r\n\r\n                                        />\r\n                                      </Col>\r\n                                       <Label htmlFor=\"examplePropertyName\" sm={1}>DOB</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"date\"\r\n                                          name=\"title\"\r\n                                          id=\"dateOfBirth\"\r\n                                          defaultValue={getuserInformation.dob}\r\n                                          value={dob}\r\n                                          onChange={e => setDob(e.target.value)}\r\n                                        />\r\n                                      </Col>\r\n                                      <Label htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                                        Countries\r\n                                   </Label>\r\n                                      <Col sm={3}>\r\n                                        <CustomInput\r\n                                          type=\"select\"\r\n                                          id={\"exampleCustomMutlipleSelect\" + getuserInformation.id}\r\n                                          name=\"customSelect\"\r\n                                          value={country.id}\r\n                                          onChange={e => setCountries(e.target.value)}\r\n                                        >\r\n                                          <option >Select Country</option>\r\n                                          {country.map((element, index) =>\r\n                                            <option key={index} value={element.id}>{element.name}</option>\r\n                                          )};\r\n                                      </CustomInput>\r\n                                      </Col>\r\n                                    </FormGroup>\r\n                                          <FormGroup row >\r\n                                       <Label htmlFor=\"personCapacity\" sm={1}>\r\n                                        Mobile No.\r\n                                     </Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          id=\"mobileNo\"\r\n                                          defaultValue={getuserInformation.mobile}\r\n                                           value={mobile}\r\n                                          onChange={e => setMobile(e.target.value)}\r\n                                          />\r\n                                      </Col>\r\n                                      <Label htmlFor=\"examplePropertyName\" sm={1}>Address</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          name=\"address\"\r\n                                          id=\"address\"\r\n                                          defaultValue={getuserInformation.address}\r\n                                          value={address}\r\n                                          onChange={e => setAddress(e.target.value)}\r\n                                       />\r\n                                      </Col>\r\n                                      <Label htmlFor=\"examplePropertyName\" sm={1}>Nationality</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          name=\"nationality\"\r\n                                          id=\"nationality\"\r\n                                          placeholder=\"enter the nationality \"\r\n                                          defaultValue={getuserInformation.nationality}\r\n                                           value={nationality}\r\n                                          onChange={e => setNationality(e.target.value)}\r\n\r\n                                        />\r\n                                      </Col>\r\n                                    </FormGroup>\r\n\r\n\r\n                                    <h3>Address</h3>\r\n                                    <FormGroup row>\r\n                                      <Label htmlFor=\"personCapacity\" sm={1}>Town</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          id=\"town\"\r\n                                          defaultValue={getuserInformation.town}\r\n                                           value={town}\r\n                                          onChange={e => setTown(e.target.value)}\r\n\r\n\r\n                                        />\r\n                                      </Col>\r\n                                      <Label htmlFor=\"hotelType\" sm={1}>Road Name</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"email\"\r\n                                          id=\"roadName\"\r\n                                          name=\"customSelect\"\r\n                                          defaultValue={getuserInformation.roadname}\r\n                                          value={roadname}\r\n                                          onChange={e => setRoadname(e.target.value)}\r\n\r\n\r\n                                        />\r\n                                      </Col>\r\n\r\n\r\n                                      <Label htmlFor=\"examplePropertyName\" sm={1}>Countries of residence</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          name=\"nationality\"\r\n                                          id=\"nationality\"\r\n                                          defaultValue={getuserInformation.ountriesofResidence}\r\n                                          value={countriesofResidence}\r\n                                          onChange={e => setCountriesofResidence(e.target.value)}\r\n\r\n\r\n                                        />\r\n                                      </Col>\r\n                                    </FormGroup>\r\n                                  </Form>\r\n                                </ModalBody>\r\n\r\n                                <ModalFooter>\r\n                                  <Button color=\"primary\" className=\"ml-auto\"  onClick={() => UpdateUserById(getuserInformation.id)}>\r\n                                    Update\r\n                                   </Button>\r\n                                </ModalFooter>\r\n                              </Modal>\r\n                              {/* edit section  finish here */}\r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Modal className=\"custom_model_size\" zIndex={2000} centered scrollable isOpen={modal2} size=\"lg\" toggle={toggle2}>\r\n            <ModalHeader toggle={toggle2}>Information Of User</ModalHeader>\r\n            <ModalBody className=\"text-center\">\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>First Name :</Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.name ?\r\n                      singleUser.name\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"examplePropertyName\" sm={1}>DOB :</Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.dob ?\r\n                      singleUser.dob\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup row >\r\n                  <Label className='view_head' htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Countries :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {singleUsergetCountry.name ?\r\n                      singleUsergetCountry.name\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>\r\n                    Mobile No. :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.phone ?\r\n                      singleUser.phone\r\n                      : ('Null')}\r\n                  </Col>\r\n                  <Label className='view_head' htmlFor=\"hotelType\" sm={1}>\r\n                    Email :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.email ?\r\n                      singleUser.email\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"examplePropertyName\" sm={1}>Nationality :</Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.nationality ?\r\n                      singleUser.nationality\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <h3>Address</h3>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Town :</Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.town ?\r\n                      singleUser.town\r\n                      : ('Null')}\r\n                  </Col>\r\n                  <Label className='view_head' htmlFor=\"hotelType\" sm={1}>Road Name :</Label>\r\n                  <Col sm={3}>\r\n                    {singleUser.road_name ?\r\n                      singleUser.road_name\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                </FormGroup>\r\n              </Form>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle2}>\r\n                Close\r\n          </Button>{' '}\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal zIndex={2000} centered size=\"sm\" isOpen={modal4} toggle={toggle4}>\r\n            <ModalHeader toggle={toggle4}>Delete Users</ModalHeader>\r\n            <ModalBody>\r\n              <p>Are you sure Want To Delete {userInformation.name}?\r\n                </p>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle4}>\r\n                Close\r\n                 </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={() => deleteUserById(userInformation.id)}>\r\n                Delete\r\n                 </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n\r\n\r\n\r\n          <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal3} toggle={toggle3} backdrop=\"static\" keyboard={false}>\r\n            <ModalHeader toggle={toggle3}>Add User</ModalHeader>\r\n            <ModalBody>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>First Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"firstName\"\r\n                      name=\"customSelect\"\r\n                      placeholder={getuserInformation.firstname}\r\n                      value={firstname}\r\n                      onChange={e => setFirstName(e.target.value)}\r\n                    />\r\n                    {nameError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {nameError}\r\n                      </Label>\r\n                    ) : null}\r\n                  </Col>\r\n                  <Label htmlFor=\"hotelType\" sm={1}>Last Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"lastName\"\r\n                      name=\"customSelect\"\r\n                      value={lastname}\r\n                      onChange={e => setLastName(e.target.value)} />\r\n                  </Col>\r\n\r\n                  <Label htmlFor=\"examplePropertyName\" sm={1}>DOB</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"title\"\r\n                      id=\"dateOfBirth\"\r\n                      value={dob}\r\n                      onChange={e => setDob(e.target.value)} />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup row >\r\n                  <Label htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Countries\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      id=\"exampleCustomMutlipleSelect\"\r\n                      name=\"customSelect\"\r\n                      value={country.id}\r\n                      onChange={e => setCountries(e.target.value)}\r\n                    >\r\n                      <option >Select Country</option>\r\n                      {country.map((element, index) =>\r\n                        <option key={index} value={element.id}>{element.name}</option>\r\n                      )};\r\n                                      </CustomInput>\r\n                    {countryError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {countryError}\r\n                      </Label>\r\n                    ) : null}\r\n                  </Col>\r\n\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>\r\n                    Mobile No.\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"number\"\r\n                      id=\"mobileNo\"\r\n                      name=\"customSelect\"\r\n                      value={mobile}\r\n                      onChange={e => setMobile(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Label htmlFor=\"hotelType\" sm={1}>\r\n                    Email\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    {emailError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {emailError}\r\n                      </Label>\r\n                    ) : null}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"examplePropertyName\" sm={1}>Nationality</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"nationality\"\r\n                      id=\"nationality\"\r\n\r\n                      value={nationality}\r\n                      onChange={e => setNationality(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Label htmlFor=\"examplePropertyName\" sm={1}>Password</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      //defaultValue={getuserInformation.email}\r\n                      value={Password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n\r\n\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <h3>Address</h3>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Town</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"town\"\r\n                      value={town}\r\n                      onChange={e => setTown(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Label htmlFor=\"hotelType\" sm={1}>Road Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      id=\"roadName\"\r\n                      name=\"customSelect\"\r\n                      value={roadname}\r\n                      onChange={e => setRoadname(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n\r\n                  <Label htmlFor=\"examplePropertyName\" sm={1}>Countries of residence</Label>\r\n                  <Col sm={2}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"nationality\"\r\n                      id=\"nationality\"\r\n                      value={countriesofResidence}\r\n                      onChange={e => setCountriesofResidence(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle3}>\r\n                Close\r\n          </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={handleSubmit}>\r\n                Add\r\n          </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Fragment>\r\n      )\r\n    }\r\n  } else {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}
{"version":3,"sources":["loader/loader.js","components/activity/activity.js"],"names":["LoaderClass","type","color","height","width","className","React","Component","Activity","props","useState","modal3","setModal3","modal4","setModal4","modal2","setModal2","modal5","setModal5","toggle4","toggle3","toggle2","toggle5","list","setList","ActivityInformation","setActivityInformation","getActivitiesInformation","setGetActivitiesInformation","activitiyName","setActivitiyName","ids","setids","listingToday","setListingToday","title","setTitle","loader","setLoader","useEffect","getData","token","localStorage","getItem","to","token1","replace","config","headers","axios","get","common","api_url","then","response","dataJson","JSON","stringify","jsonPrser","parse","status","data","catch","error","console","log","role","isLoggedIn","data-toggle","onClick","id","filter","val","map","index","key","icon","placement","style","fontSize","GetPlaceById","outline","container","target","value","viewForDeleteData","viewData","activityName","created_at","zIndex","centered","isOpen","toggle","row","htmlFor","sm","name","defaultValue","onChange","e","placeholder","payload","put","res","swal","err","UpdateActivitysById","scrollable","size","place_name","close_mu_time","category","phone_number","town","place_address","delete","users","setState","removeData","backdrop","keyboard","evt","preventDefault","post"],"mappings":"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","file":"static/js/19.44ac56e1.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\nimport './loader.css'\r\nexport default class LoaderClass extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n        height={100}\r\n        width={100}\r\n        className=\"loader_position\"\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport './activity.css'\r\nimport common from \"../../common/common\";\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport { CheckboxToggle } from 'react-rainbow-components';\r\nimport LoaderClass from '../../loader/loader'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  InputGroupText,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  FormText,\r\n  Form,\r\n  CustomInput,\r\n  Label,\r\n  UncontrolledAlert,\r\n  UncontrolledTooltip,\r\n  Alert,\r\n  ButtonToggle,\r\n  InputGroupAddon,\r\n  InputGroup\r\n} from 'reactstrap';\r\n\r\n          function Activity(props) {\r\n\r\n            const [indexes, setIndexes] = useState([]);\r\n            const [counter, setCounter] = useState(0);\r\n\r\n\t\t  \r\n  const HourMinutes = [\r\n    { label: 'Hours', value: 'Hours' },\r\n    { label: ' Minutes', value: ' Minutes' },\r\n  ];\r\n  \r\n    const Placeoptions = [\r\n      { label: 'Bar', value: 'Bar' },\r\n      { label: 'Club', value: 'Club' },\r\n\t    {label:'Pub',value : 'Pub'},\r\n    ];\r\n\r\n  const [modal3, setModal3] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [modal5, setModal5] = useState(false);\r\n \r\n  const toggle4 = () => setModal4(!modal4);\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const toggle5 = () => setModal5(!modal5);\r\n  \r\n\r\n  const [list, setList] = useState([]);\r\n  const [ActivityInformation, setActivityInformation] = useState([]);\r\n  const [getActivitiesInformation, setGetActivitiesInformation] = useState([]);\r\n\r\n\r\n  //add form for Activities\r\n  const [activitiyName, setActivitiyName] = useState(\"\");\r\n  const [ids, setids] = useState(\"\");\r\n  const [listingToday, setListingToday] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchbyName, setSearchbyName] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\"); \r\n  const [title, setTitle] = useState(\"\"); \r\n  \r\n  const [loader, setLoader] = useState(true);\r\n\r\n\r\n \r\n  const foodMenuOptions = [\r\n    { label: 'Dessert', value: 1 },\r\n    { label: 'Other', value: 2 },\r\n      { label: 'Main', value: 3 },\r\n    { label: 'Starter', value: 4},\r\n  ];\r\n      \r\n\t  const DrinkOptions = [\r\n    { label: 'Alcohalic', value: 1 },\r\n    { label: 'Non-alcohalic', value: 2 },\r\n    \r\n  ];\r\n\r\n  const emptySetVariable = () => {\r\n    // setCatogeryError('');\r\n    // setAddressError('');\r\n    // setTownError('');\r\n  \t// setPlaceError('');\r\n    // setMobileError('');\r\n    // setDistrictError('');\r\n    // setdisrciptionerror('');\r\n  }\r\n\t  const handleSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      emptySetVariable();\r\n    //  if (Placetype == '') {\r\n    //  setCatogeryError('Cetgory is required!');\r\n    //  return;\r\n    //  }\r\n    // // const isValid=FormValidation();\r\n    //  emptySetVariable();\r\n    //  if (town == '') {\r\n    // setTownError('town is required!');\r\n    // return;\r\n    //  }\r\n\r\n    //  if (address == '') {\r\n    // setAddressError('Address is required!');\r\n    // return;\r\n    //  }\r\n    //  if (mobile == '') {\r\n    //  setMobileError('phone no is required!');\r\n    //  return;\r\n    //  }\r\n\t  // if (address == '') {\r\n    //  setDistrictError('distrcit is required!');\r\n    //  return;\r\n    //  } if (disrciptionerror == '') {\r\n    //  setdisrciptionerror('discription is required!');\r\n    //  return;\r\n     //}\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/, '');\r\n    console.log(token);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\r\nlet payload = {\r\n  \r\n  activityName: activitiyName,\r\nlistingToday:listingToday,\r\ntitle:title\r\n// located: null,\r\n// location: null,\r\n// notice_guest: null,\r\n// offerservice: null,\r\n// otherAct: null,\r\n// otherDietary: null,\r\n// pickupServiceGuest: 1,\r\n// prop_num_street_name: null\r\n// rate_guest: null\r\n// remarks: null\r\n// skyAct: null\r\n// status: 1\r\n// suitableChild: 1\r\n\r\n// totalDays: null\r\n// town: null\r\n// transportService: 1\r\n// type: 1\r\n// updated_at: \"07-Jun-2021 06:31:46\"\r\n// upload: null\r\n// user_id: 1\r\n// waterAct: null\r\n// wheelchairAccess: 1\r\n\t}\r\n\r\n\r\n  \r\n    axios.post(`${common.api_url}activity`, payload, config)\r\n      .then(res => {\r\n        if (res.data.data) {\r\n          toggle3(false)\r\n          getData();\r\n            swal(\"Activity Added Successfully!\", \"success\");\r\n           return res.data.data;\r\n          // history.push('/rooms', roomModel)\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n    // history.push('/rooms', roomModel);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n     getData();\r\n     // getListing();\r\n   }, [])\r\n   const getData = () => {\r\n     let token = localStorage.getItem(\"key\");\r\n     if (token) {\r\n       var token1 = token.replace(/\"/g, \"\");\r\n      \r\n     } else {\r\n       return <Redirect to='/' />\r\n\r\n     }\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'applicatio/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}activity`, config).then((response) => {\r\n       var dataJson = JSON.stringify(response);\r\n       var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n         setList(jsonPrser.data.data)\r\n         setLoader(false)\r\n\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n     });\r\n   }\r\n      \r\n\r\n\r\n\r\n  const removeData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n      const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.delete(`${common.api_url}activity/${id}`, config)\r\n      .then(res => {\r\n        if (res) {\r\n          toggle4(false);\r\n          swal(\"Activity deleted Successfully!\");\r\n          getData();\r\n          const users = res.data;\r\n          this.setState({ users });\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n   const viewData = (id) => {\r\n     let token = localStorage.getItem(\"key\");\r\n     var token1 = token.replace(/\"/g, \"\");\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}pbc/${id}`, config).then((response) => {\r\n       let dataJson = JSON.stringify(response);\r\n       let jsonPrser = JSON.parse(dataJson);\r\n       if (jsonPrser.status == 200) {\r\n        setActivityInformation(jsonPrser.data.data)\r\n         toggle2(true)\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n\r\n     });\r\n\r\n   }\r\n  const viewForDeleteData = (id) => {\r\n     console.log(id);\r\n     let token = localStorage.getItem(\"key\");\r\n     var token1 = token.replace(/\"/g, \"\");\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}activity/${id}`, config).then((response) => {\r\n       let dataJson = JSON.stringify(response);\r\n       let jsonPrser = JSON.parse(dataJson);\r\n       if (jsonPrser.status == 200) {\r\n        setActivityInformation(jsonPrser.data.data) \r\n         toggle4(true)\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n\r\n     });\r\n\r\n   }\r\n\r\n  const GetPlaceById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}activity/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setGetActivitiesInformation(jsonPrser.data.data)\r\n        setTitle(jsonPrser.data.data.title)\r\n        setids(jsonPrser.data.data.id)\r\n        setListingToday(jsonPrser.data.data.listingToday)\r\n        setActivitiyName(jsonPrser.data.data.activitiyName)\r\n        toggle5(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  const UpdateActivitysById = (id) => {\r\n\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    console.log(token);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\r\n         let payload = {      \r\n        activityName: activitiyName,\r\n        listingToday:listingToday,\r\n        title:title\r\n        \t}\r\n\t\r\n\t\r\n    axios.put(`${common.api_url}activity/${ids}`, payload, config)\r\n      .then(res => {\r\n        if (res) {\r\n         toggle5(false);\r\n\t\t     getData();\r\n         swal(\"Activity Updated Successfully!\", \"success\");\r\n     return res.data.data;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  let role = localStorage.getItem(\"role\");\r\n  let isLoggedIn = localStorage.getItem(\"IsLoggedIn\")\r\n  if (role && isLoggedIn) {\r\n    if (loader == true) {\r\n      return (\r\n        <Fragment>\r\n          <LoaderClass className=\"loader_position\" />\r\n        </Fragment>\r\n      )\r\n    } else {\r\nreturn (\r\n\r\n        <Fragment>\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"m-0\">Activity</h1>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <ol className=\"breadcrumb float-sm-right\">\r\n                      <li className=\"breadcrumb-item\">\r\n\t\t\t\t\t           <Button className=\"m-2\" color=\"second\" data-toggle=\"modal\" onClick={toggle3} >\r\n                        Add Activity\r\n                    </Button>\r\n                      </li>\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>\r\n\t\t\t\t\t\t\t  </th>\r\n                              <th></th>\r\n                            <th>\r\n                            {/* <input type=\"text\" className=\"form-control-sm\" placeholder=\"search by Role\" value={searchRole} onChange={(e=>searchRoleFun(e.target.value))} aria-label=\"Username\" /> */}\r\n\r\n                            </th>\r\n                            \r\n                            <th></th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Sl</th>\r\n                            <th>Action</th>\r\n                            <th>activityName</th>\r\n                            <th>listingToday</th>\r\n                            <th>title</th>\r\n                            <th>created_at</th>\r\n                            {/* <th>PlaceName</th> */}\r\n                          </tr>\r\n                        </thead>\r\n                        {list.filter((val) => {\r\n                          if (search && searchbyName == \"\") {\r\n                            return val;\r\n                           } else\r\n                  //  if (val.placeName.includes(search) ||  val.email == searchbyName) \r\n\t\t\t\t\t\t   {\r\n                            return val;\r\n                          }\r\n                        }).map((data, index) =>\r\n                          <tbody key={index}>\r\n                            <tr>\r\n                              <td>{index+1}</td>\r\n                              <td>  <FontAwesomeIcon\r\n                                icon={['far', 'edit']}\r\n                                className=\"font-size-xxl\"\r\n                                placement=\"top\"\r\n                                style={{fontSize:15,color:'#0AEE23'}}\r\n                                onClick={() => GetPlaceById(data.id)}\r\n                                id=\"tooltipforedit\"\r\n                                outline={data.id} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipforedit\">\r\n                                  edit\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                         <FontAwesomeIcon\r\n                                  icon={['far', 'trash-alt']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#EE180A '}}\r\n                                  id=\"tooltipfordelete\"\r\n                                  value={data.id}\r\n                                  onClick={() => viewForDeleteData(data.id)}\r\n                                  outline={data.id}\r\n                                />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipfordelete\">\r\n                                  delete\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                        <FontAwesomeIcon\r\n                                  icon={['far', 'eye']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#0710CD '}}\r\n                                  id=\"tooltipforview\"\r\n                                  outline={data.id} onClick={() => viewData(data.id)} /> <UncontrolledTooltip\r\n                                    placement=\"top\"\r\n                                    container=\"body\"\r\n                                    target=\"tooltipforview\">\r\n                                  view\r\n                     </UncontrolledTooltip></td>\r\n                              <td>{data.activityName}</td>\r\n                              <td>{data.listingToday}</td>\r\n                              <td>{data.title}</td>\r\n                              <td>{data.created_at}</td>\r\n                               {/* <td className={common.status[data.status_id]}>{common.status[data.status_id]}</td>  */}\r\n                          \r\n                              {/* edit section for Activity */}\r\n                              <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal5} toggle={toggle5}>\r\n                                <ModalHeader toggle={toggle5}>Edit Activity</ModalHeader>\r\n                                <ModalBody>\r\n\r\n                               <Form>\r\n                               <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Activity Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"activitiyName\"\r\n                      name=\"activitiyName\"\r\n                       //placeholder={getuserInformation.activityName}\r\n                       defaultValue={getActivitiesInformation.activityName}\r\n                      value={activitiyName}\r\n                      onChange={e => setActivitiyName(e.target.value)}\r\n                    />\r\n                    {/* {PlaceError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {PlaceError}\r\n                      </Label>\r\n                    ) : null} */}\r\n                  </Col>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>listingToday\r\n                            </Label>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                               type=\"text\"\r\n                                id=\"listingtoday\"\r\n                                placeholder=\"Land Activity, Sea Activity, Air Activity, Others\"\r\n                                 defaultValue={getActivitiesInformation.listingToday}\r\n                                 value={listingToday}\r\n                                 onChange={e => setListingToday(e.target.value)}              \r\n                            />\r\n                          {/* {DistrictError != '' ? (\r\n                            <Label style={{ color: \"red\" }}>\r\n                            {DistrictError}\r\n                            </Label>\r\n                          ) : null} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </Col>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Title\r\n                            </Label>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"title\"\r\n                                value={title}\r\n                                 defaultValue={getActivitiesInformation.title}\r\n                                onChange={e => setTitle(e.target.value)}              \r\n                            />\r\n\t\t\t\t\t\t\t\t\t\t{/* {DistrictError != '' ? (\r\n\t\t\t\t\t\t\t\t\t\t  <Label style={{ color: \"red\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{DistrictError}\r\n\t\t\t\t\t\t\t\t\t\t  </Label>\r\n\t\t\t\t\t\t\t\t\t\t) : null} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </Col>\r\n\t\t\t\t   {/* <Label htmlFor=\"examplePropertyName\" sm={1}>Place Address</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id=\"address\"\r\n                    value={address}\r\n                      onChange={e => setAddress(e.target.value)}\r\n                    />\r\n                    {/* {AddressError != '' ? (\r\n                    <Label style={{ color: \"red\" }}>\r\n                    {AddressError}\r\n                    </Label>\r\n                  ) : null} \r\n                                      </Col>\r\n                    <Label htmlFor=\"examplePropertyName\" sm={1}>Town</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id=\"town\"\r\n                      defaultValue={getActivitiesInformation.town}\r\n                        value={town}\r\n                          onChange={e => setTown(e.target.value)}\r\n                                        />\r\n                                  {TownError != '' ? (\r\n                                    <Label style={{ color: \"red\" }}>\r\n                                    {TownError}\r\n                                    </Label>\r\n                                  ) : null} \r\n                                      </Col> */}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n                               </Form>\r\n                                 \r\n                                 \r\n                                </ModalBody>\r\n\r\n                                <ModalFooter>\r\n                                   <Button color=\"primary\" className=\"ml-auto\" onClick={() => UpdateActivitysById(data.id)}>\r\n                                  Update\r\n          </Button>\r\n                                </ModalFooter>\r\n                              </Modal>\r\n                              {/* edit section  finish here */}\r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Modal className=\"custom_model_size\" zIndex={2000} centered scrollable isOpen={modal2} size=\"lg\" toggle={toggle2}>\r\n            <ModalHeader toggle={toggle2}>Information Of Activity</ModalHeader>\r\n            <ModalBody className=\"text-center\">\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Place Name :</Label>\r\n                  <Col sm={3}>\r\n                    {ActivityInformation.place_name ?\r\n                      ActivityInformation.place_name\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"examplePropertyName\" sm={1}>openingHours</Label>\r\n                  <Col sm={3}>\r\n                    {ActivityInformation.close_mu_time ?\r\n                      ActivityInformation.close_mu_time\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup row >\r\n                  <Label className='view_head' htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Catogery :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {ActivityInformation.category ?\r\n                      ActivityInformation.category\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>\r\n                    Mobile No. :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {ActivityInformation.phone_number ?\r\n                      ActivityInformation.phone_number\r\n                      : ('Null')}\r\n                  </Col>\r\n              \r\n                </FormGroup>\r\n                 \r\n                <h3>Address</h3>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Town :</Label>\r\n                <Col sm={3}>\r\n                  {ActivityInformation.town}\r\n\r\n                </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"hotelType\" sm={1}>District  :</Label>\r\n                  <Col sm={3}>\r\n                    {ActivityInformation.place_address ?\r\n                      ActivityInformation.place_address\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                </FormGroup>\r\n              </Form>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle2}>\r\n                Close\r\n          </Button>{' '}\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal zIndex={2000} centered size=\"sm\" isOpen={modal4} toggle={toggle4}>\r\n            <ModalHeader toggle={toggle4}>Delete Activity</ModalHeader>\r\n            <ModalBody>\r\n              <p>Are you sure Want To Delete {ActivityInformation.place_name}?\r\n                              </p>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle4}>\r\n                Close\r\n                                 </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={() => removeData(ActivityInformation.id)}>\r\n                Delete\r\n                               </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n\r\n \r\n\r\n          <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal3} toggle={toggle3} backdrop=\"static\" keyboard={false}>\r\n            <ModalHeader toggle={toggle3}>Add Activity</ModalHeader>\r\n            <ModalBody>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Activity Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"activitiyName\"\r\n                      name=\"activitiyName\"\r\n                      // placeholder={getuserInformation.placeName}\r\n                      value={activitiyName}\r\n                      onChange={e => setActivitiyName(e.target.value)}\r\n                    />\r\n                    {/* {PlaceError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {PlaceError}\r\n                      </Label>\r\n                    ) : null} */}\r\n                  </Col>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>listingToday\r\n                            </Label>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"district\"\r\n                                value={listingToday}\r\n                                // defaultValue={getActivitiesInformation.place_address}\r\n                                onChange={e => setListingToday(e.target.value)}              \r\n                            />\r\n\t\t\t\t\t\t\t\t\t\t{/* {DistrictError != '' ? (\r\n\t\t\t\t\t\t\t\t\t\t  <Label style={{ color: \"red\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{DistrictError}\r\n\t\t\t\t\t\t\t\t\t\t  </Label>\r\n\t\t\t\t\t\t\t\t\t\t) : null} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </Col>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Title\r\n                            </Label>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              id=\"district\"\r\n                                value={title}\r\n                                // defaultValue={getActivitiesInformation.title}\r\n                                onChange={e => setTitle(e.target.value)}              \r\n                            />\r\n\t\t\t\t\t\t\t\t\t\t{/* {DistrictError != '' ? (\r\n\t\t\t\t\t\t\t\t\t\t  <Label style={{ color: \"red\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{DistrictError}\r\n\t\t\t\t\t\t\t\t\t\t  </Label>\r\n\t\t\t\t\t\t\t\t\t\t) : null} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </Col>\r\n\t\t\t\t   {/* <Label htmlFor=\"examplePropertyName\" sm={1}>Place Address</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id=\"address\"\r\n                    value={address}\r\n                      onChange={e => setAddress(e.target.value)}\r\n                    />\r\n                    {/* {AddressError != '' ? (\r\n                    <Label style={{ color: \"red\" }}>\r\n                    {AddressError}\r\n                    </Label>\r\n                  ) : null} \r\n                                      </Col>\r\n                    <Label htmlFor=\"examplePropertyName\" sm={1}>Town</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id=\"town\"\r\n                      defaultValue={getActivitiesInformation.town}\r\n                        value={town}\r\n                          onChange={e => setTown(e.target.value)}\r\n                                        />\r\n                                  {TownError != '' ? (\r\n                                    <Label style={{ color: \"red\" }}>\r\n                                    {TownError}\r\n                                    </Label>\r\n                                  ) : null} \r\n                                      </Col> */}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  {/* <Label htmlFor=\"personCapacity\" sm={1}>\r\n\t\t\t\t\t\t\t\t\t   Phone Number\r\n\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t  <Col sm={3}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t  type=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t  id=\"mobileNo\"\r\n\t\t\t\t\t\t\t\t\t\t  name=\"customSelect\"\r\n\t\t\t\t\t\t\t\t\t\t  value={mobile}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={e => setMobile(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t\t\t {/* {MobileError != '' ? (\r\n\t\t\t\t\t\t\t\t\t  <Label style={{ color: \"red\" }}>\r\n\t\t\t\t\t\t\t\t\t\t{MobileError}\r\n\t\t\t\t\t\t\t\t\t  </Label>\r\n\t\t\t\t\t\t\t\t\t) : null} \r\n\t\t\t\t\t\t\t\t\t  </Col>*/}\r\n\t\t\t\t\t         </FormGroup>\r\n\t\t\t              </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle3}>\r\n                Close\r\n          </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={handleSubmit}>\r\n                Add\r\n          </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Fragment>\r\n       )\r\n      }\r\n    } else {\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    }\r\n\t\r\nexport default Activity;\r\n"],"sourceRoot":""}
{"version":3,"sources":["loader/loader.js","components/canclation/canclation.js"],"names":["LoaderClass","type","color","height","width","className","React","Component","Cancellation","useState","CatogeryList","setCatogeryList","modal3","setModal3","modal4","setModal4","modal2","setModal2","modal5","setModal5","toggle4","toggle3","toggle2","toggle5","list","setList","setPlaceInformation","loader","setLoader","setpolciyInformationn","polciyInformation","ids","setids","Canclelation","setCanclelation","PolicyError","setPolicyError","category","setcategory","useEffect","getData","getCatogeryId","getpolicy","token","localStorage","getItem","to","token1","replace","config","headers","axios","get","common","api_url","then","response","dataJson","JSON","stringify","jsonPrser","parse","status","data","catch","error","console","log","id","UpdatepolicyById","payload","description","policy_category_id","put","res","swal","err","role","isLoggedIn","data-toggle","onClick","filter","val","map","index","key","icon","placement","style","fontSize","GetPlaceById","outline","container","target","value","viewForDeleteData","viewData","get_policy_category","title","price","zIndex","centered","isOpen","toggle","onclick","row","htmlFor","sm","name","defaultValue","onChange","e","scrollable","size","delete","users","setState","removeData","backdrop","keyboard","evt","preventDefault","post"],"mappings":"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","file":"static/js/21.f6996677.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\nimport './loader.css'\r\nexport default class LoaderClass extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n        height={100}\r\n        width={100}\r\n        className=\"loader_position\"\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport './canclation.css'\r\nimport common from \"../../common/common\";\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport { CheckboxToggle } from 'react-rainbow-components';\r\nimport LoaderClass from '../../loader/loader'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  InputGroupText,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  FormText,\r\n  Form,\r\n  CustomInput,\r\n  Label,\r\n  UncontrolledAlert,\r\n  UncontrolledTooltip,\r\n  Alert,\r\n  ButtonToggle,\r\n  InputGroupAddon,\r\n  InputGroup\r\n} from 'reactstrap';\r\n\r\nfunction Cancellation() {\r\n\r\n  const [indexes, setIndexes] = useState([]);\r\n  const [CatogeryList, setCatogeryList] = useState([]);\r\n\r\n\r\n  const Placeoptions = [\r\n    { label: 'Bar', value: 'Bar' },\r\n    { label: 'Club', value: 'Club' },\r\n    { label: 'Pub', value: 'Pub' },\r\n  ];\r\n\r\n  const [modal3, setModal3] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [modal5, setModal5] = useState(false);\r\n\r\n  const toggle4 = () => setModal4(!modal4);\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const toggle5 = () => setModal5(!modal5);\r\n\r\n\r\n  const [list, setList] = useState([]);\r\n  const [allList, setAllList] = useState([]);\r\n  const [Catorey, setCatorey] = useState([]);\r\n  const [placeInformation, setPlaceInformation] = useState([]);\r\n\r\n  //add form for Pub\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  \r\n  const [getpolciyInformation, setpolciyInformationn] = useState(\"\");\r\n  const [polciyInformation, setpolciyInformation] = useState(\"\");\r\n\r\n  \r\n  const [town, setTown] = useState(\"\");\r\n  const [ids, setids] = useState(\"\");\r\n  const [Canclelation, setCanclelation] = useState(\"\");\r\n  const [PolicyError, setPolicyError] = useState('');\r\n  \r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchbyName, setSearchbyName] = useState(\"\");\r\n  const [country, setCountry] = useState([]);\r\n  const [category, setcategory] = useState(\"\");\r\n\r\n  const foodMenuOptions = [\r\n    { label: 'Dessert', value: 1 },\r\n    { label: 'Other', value: 2 },\r\n    { label: 'Main', value: 3 },\r\n    { label: 'Starter', value: 4 },\r\n  ];\r\n\r\n  const DrinkOptions = [\r\n    { label: 'Alcohalic', value: 1 },\r\n    { label: 'Non-alcohalic', value: 2 },\r\n\r\n  ];\r\n\r\n  const emptySetVariable = () => {\r\n    setPolicyError('');\r\n  }\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    emptySetVariable();\r\n\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/, '');\r\n    console.log(token);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n  let payload = {\r\n      description: Canclelation,\r\n      policy_category_id:category\r\n    }\r\n  axios.post(`${common.api_url}cancelpolicy`, payload, config)\r\n      .then(res => {\r\n        if (res.data.data) {\r\n          toggle3(false)\r\n          swal(\"Policy Added Successfully!\", \"success\");\r\n          return res.data.data;\r\n          // history.push('/canclation', roomModel)\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n    // history.push('/rooms', roomModel);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n   getData();\r\n   // getCountries();\r\n   getCatogeryId();\r\n   getpolicy();\r\n  }, [])\r\n  const getData = () => {\r\n    let token = localStorage.getItem(\"key\");\r\n    if (token) {\r\n      var token1 = token.replace(/\"/g, \"\");\r\n        } else {\r\n      return <Redirect to='/' />\r\n\r\n    }\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'applicatio/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}cancelpolicy`, config).then((response) => {\r\n      var dataJson = JSON.stringify(response);\r\n      var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setList(jsonPrser.data.data)\r\n         setLoader(false)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n  }\r\n\r\n\r\n  const getpolicy = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}cancelpolicy`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setpolciyInformationn(jsonPrser.data.data)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n\r\n  }\r\n\r\n  const removeData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.delete(`${common.api_url}cancelpolicy/${ids}`, config)\r\n      .then(res => {\r\n        if (res) {\r\n          toggle4(false);\r\n          swal(\"policy deleted Successfully!\");\r\n          getData();\r\n          const users = res.data;\r\n          this.setState({ users });\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  const viewData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}cancelpolicy/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setPlaceInformation(jsonPrser.data.data)\r\n        toggle2(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n\r\n    });\r\n\r\n  }\r\n  const viewForDeleteData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}cancelpolicy/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setPlaceInformation(jsonPrser.data.data)\r\n        setids(jsonPrser.data.data.id)\r\n        toggle4(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const GetPlaceById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}cancelpolicy/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setpolciyInformationn(jsonPrser.data.data)\r\n        setCanclelation(jsonPrser.data.data.description);\r\n        setcategory(jsonPrser.data.data.policy_category_id);\r\n        setids(jsonPrser.data.data.id)\r\n        toggle5(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n\r\n  }\r\n  \r\n  const getCatogeryId = () => {\r\n      let token = localStorage.getItem(\"key\");\r\n      if (token) {\r\n        var token1 = token.replace(/\"/g, \"\");\r\n          } else {\r\n        return <Redirect to='/' />\r\n  \r\n      }\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'applicatio/json',\r\n          'Accept': 'application/json',\r\n          'Authorization': `Bearer ${token1}`\r\n        }\r\n      };\r\n      axios.get(`${common.api_url}policycategory`, config).then((response) => {\r\n        var dataJson = JSON.stringify(response);\r\n        var jsonPrser = JSON.parse(dataJson);\r\n        if (jsonPrser.status == 200) {\r\n          setCatogeryList(jsonPrser.data.data)\r\n          console.log(jsonPrser.data.data)\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error, 'errror');\r\n      });\r\n    }\r\n   \r\n\r\n\r\n  const UpdatepolicyById = (id) => {\r\n\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    console.log(token);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\r\n    let payload = {\r\n      description: Canclelation,\r\n      policy_category_id : category\r\n    }\r\n\r\n\r\n    axios.put(`${common.api_url}cancelpolicy/${ids}`, payload, config)\r\n      .then(res => {\r\n        if (res) {\r\n          toggle5(false);\r\n          getData()\r\n          console.log(id);\r\n          swal(\"polciy Updated Successfully!\", \"success\");\r\n          return res.data.data;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  let role = localStorage.getItem(\"role\");\r\n  let isLoggedIn = localStorage.getItem(\"IsLoggedIn\")\r\n  if (role && isLoggedIn) {\r\n    if (loader == true) {\r\n      return (\r\n        <Fragment>\r\n          <LoaderClass className=\"loader_position\" />\r\n        </Fragment>\r\n      )\r\n    } else {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0\">Policy</h1>\r\n              </div>\r\n\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><Button className=\"m-2\" color=\"second\" data-toggle=\"modal\" onClick={toggle3} >\r\n                   Add Policy\r\n                 </Button>\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                      <th></th>\r\n                        <th>\r\n                        </th>\r\n\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th></th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>Sl</th>\r\n                        <th>Action</th>\r\n                        <th>polciy</th>\r\n                        <th>Title</th>\r\n                        <th>percentage</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {list.filter((val) => {\r\n                      if (search && searchbyName == \"\") {\r\n                        return val;\r\n                      } else\r\n                      {\r\n                        return val;\r\n                      }\r\n                    }).map((data, index) =>\r\n                      <tbody key={index}>\r\n                        <tr>\r\n                          <td>{index + 1}</td>\r\n                          <td>  <FontAwesomeIcon\r\n                            icon={['far', 'edit']}\r\n                            className=\"font-size-xxl\"\r\n                            placement=\"top\"\r\n                            style={{ fontSize: 15, color: '#0AEE23' }}\r\n                            onClick={() => GetPlaceById(data.id)}\r\n                            id=\"tooltipforedit\"\r\n                            outline={data.id} />\r\n                            <UncontrolledTooltip\r\n                              placement=\"top\"\r\n                              container=\"body\"\r\n                              target=\"tooltipforedit\">\r\n                              edit\r\n                        </UncontrolledTooltip>&nbsp; &nbsp;\r\n                          <FontAwesomeIcon\r\n                              icon={['far', 'trash-alt']}\r\n                              className=\"font-size-xxl\"\r\n                              placement=\"top\"\r\n                              style={{ fontSize: 15, color: '#EE180A ' }}\r\n                              id=\"tooltipfordelete\"\r\n                              value={data.id}\r\n                              onClick={() => viewForDeleteData(data.id)}\r\n                              outline={data.id}\r\n                            />\r\n                            <UncontrolledTooltip\r\n                              placement=\"top\"\r\n                              container=\"body\"\r\n                              target=\"tooltipfordelete\">\r\n                              delete\r\n                        </UncontrolledTooltip>&nbsp; &nbsp;\r\n                          <FontAwesomeIcon\r\n                              icon={['far', 'eye']}\r\n                              className=\"font-size-xxl\"\r\n                              placement=\"top\"\r\n                              style={{ fontSize: 15, color: '#0710CD ' }}\r\n                              id=\"tooltipforview\"\r\n                              outline={data.id} onClick={() => viewData(data.id)} /> <UncontrolledTooltip\r\n                                placement=\"top\"\r\n                                container=\"body\"\r\n                                target=\"tooltipforview\">\r\n                              view\r\n                         </UncontrolledTooltip></td>\r\n                          <td>{data.description}</td>\r\n                          <td>{data.get_policy_category.title}</td>\r\n                          <td>{data.get_policy_category.price +\"%\"}</td>\r\n\r\n\r\n                          {/* edit section for canclation */}\r\n                          <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal5} toggle={toggle5}>\r\n                            <ModalHeader toggle={toggle5}>Edit policy</ModalHeader>\r\n                            <ModalBody>\r\n\r\n\r\n                              <Form onclick={() => UpdatepolicyById(data.id)}>\r\n                                <FormGroup row>\r\n\r\n                                  <Label htmlFor=\"personCapacity\" sm={1}>canclation Policy</Label>\r\n                                  <Col sm={9}>\r\n                                    <Input\r\n                                      type=\"textarea\"\r\n                                      id=\"placeName\"\r\n                                      name=\"canclation\"\r\n                                      defaultValue={polciyInformation.description}\r\n                                      value={Canclelation}\r\n                                      onChange={e => setCanclelation(e.target.value)}\r\n\r\n                                    />\r\n                                  </Col>\r\n\r\n                                </FormGroup>\r\n\r\n                              </Form>\r\n                              <FormGroup row>\r\n                          <Label htmlFor=\"countries\" sm={1}>\r\n                          category\r\n                                          </Label>\r\n                                          <Col sm={3}>\r\n                                      <CustomInput\r\n                                    type=\"select\"\r\n                                    id=\"category_1\"\r\n                                    name=\"ccategory\" \r\n                                    defaultValue={polciyInformation.policy_category_id}\r\n                                    value={category.id}\r\n                                    onChange={e => setcategory(e.target.value)}\r\n                                    >\r\n                                    <option >Select category</option>\r\n                                    {CatogeryList.map((data, index) =>\r\n                                      <option key={index} value={data.id}>{data.title}</option>\r\n                                    )}; \r\n                        </CustomInput> \r\n               </Col>\r\n            </FormGroup>\r\n                            </ModalBody>\r\n\r\n                            <ModalFooter>\r\n                              <Button color=\"primary\" className=\"ml-auto\" onClick={() => UpdatepolicyById(data.id)}>\r\n                                Update\r\n            </Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n\r\n                          {/* edit section  finish here */}\r\n                        </tr>\r\n                      </tbody>\r\n                    )}\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <Modal className=\"custom_model_size\" zIndex={2000} centered scrollable isOpen={modal2} size=\"lg\" toggle={toggle2}>\r\n        <ModalHeader toggle={toggle2}>Information Of Policy</ModalHeader>\r\n        <ModalBody className=\"text-center\">\r\n          <Form>\r\n            <FormGroup row>\r\n              <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>canclation Policy:</Label>\r\n              <Col sm={9}>\r\n                {polciyInformation.description ?\r\n                  polciyInformation.description\r\n                  : ('Null')}\r\n              </Col>\r\n\r\n            </FormGroup>\r\n          </Form>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle2}>\r\n            Close\r\n            </Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal zIndex={2000} centered size=\"sm\" isOpen={modal4} toggle={toggle4}>\r\n        <ModalHeader toggle={toggle4}>Delete Place</ModalHeader>\r\n        <ModalBody>\r\n          <p>Are you sure Want To Delete {polciyInformation.description}?\r\n                </p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle4}>\r\n            Close\r\n                </Button>{' '}\r\n          <Button color=\"primary\" className=\"ml-auto\" onClick={() => removeData(polciyInformation.id)}>\r\n            Delete\r\n         </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal3} toggle={toggle3} backdrop=\"static\" keyboard={false}>\r\n        <ModalHeader toggle={toggle3}>Add Place</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup row>\r\n              <Label htmlFor=\"personCapacity\" sm={1}>canclation Policy</Label>\r\n              <Col sm={9}>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  id=\"placeName\"\r\n                  name=\"customSelect\"\r\n                  value={Canclelation}\r\n                  onChange={e => setCanclelation(e.target.value)}\r\n                />\r\n                {PolicyError != '' ? (\r\n                  <Label style={{ color: \"red\" }}>\r\n                    {PolicyError}\r\n                  </Label>\r\n                ) : null}\r\n              </Col>\r\n              \r\n            </FormGroup>\r\n             <FormGroup row>\r\n           <Label htmlFor=\"countries\" sm={1}>\r\n           category\r\n                          </Label>\r\n                          <Col sm={3}>\r\n\t\t\t\t\t\t\t\t\t    <CustomInput\r\n\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"category_1\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"ccategory\" \r\n\t\t\t\t\t\t\t\t\t   value={category.id}\r\n\t\t\t\t\t\t\t\t\t   onChange={e => setcategory(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t<option >Select category</option>\r\n\t\t\t\t\t\t\t\t\t\t{CatogeryList.map((data, index) =>\r\n\t\t\t\t\t\t\t\t\t\t  <option key={index} value={data.id}>{data.title}</option>\r\n\t\t\t\t\t\t\t\t\t\t)}; \r\n        </CustomInput> \r\n               </Col>\r\n            </FormGroup> \r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle3}>\r\n            Close\r\n            </Button>{' '}\r\n          <Button color=\"primary\" className=\"ml-auto\" onClick={handleSubmit}>\r\n            Add\r\n            </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n} else {\r\n  return <Redirect to='/' />\r\n}\r\n\r\n}\r\n\r\nexport default Cancellation;\r\n"],"sourceRoot":""}
{"version":3,"sources":["loader/loader.js","components/transactions/transactions.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["LoaderClass","type","color","height","width","className","React","Component","Transaction","useState","modal2","setModal2","setLoader","toggle2","list","setList","trasactionInformation","setTrasactionInformation","useEffect","getData","token","localStorage","getItem","to","token1","replace","config","headers","axios","get","then","response","dataJson","JSON","stringify","jsonPrser","parse","status","data","catch","error","console","log","id","filter","val","map","index","key","icon","placement","style","fontSize","outline","onClick","common","api_url","creditCard","viewData","container","target","amount","braintree_id","cardType","name","status_id","zIndex","centered","scrollable","isOpen","size","toggle","row","htmlFor","sm","transaction_status","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError"],"mappings":"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","file":"static/js/15.f0f8a17c.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\nimport './loader.css'\r\nexport default class LoaderClass extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n        height={100}\r\n        width={100}\r\n        className=\"loader_position\"\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport './transactions.css'\r\nimport common from \"../../common/common\";\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport { CheckboxToggle } from 'react-rainbow-components';\r\nimport LoaderClass from '../../loader/loader'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  InputGroupText,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  FormText,\r\n  Form,\r\n  CustomInput,\r\n  Label,\r\n  UncontrolledAlert,\r\n  UncontrolledTooltip,\r\n  Alert,\r\n  ButtonToggle,\r\n  InputGroupAddon,\r\n  InputGroup\r\n} from 'reactstrap';\r\n\r\n          function Transaction() {\r\n\r\n            const [indexes, setIndexes] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const addNewField = () => {\r\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\r\n    setCounter(prevCounter => prevCounter + 1);\r\n  };\r\n\r\n  const removeNewField = index => () => {\r\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\r\n    setCounter(prevCounter => prevCounter - 1);\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setIndexes([]);\r\n  };\r\n\r\n\r\n  \r\n    const Placeoptions = [\r\n      { label: 'Bar', value: 'Bar' },\r\n      { label: 'Club', value: 'Club' },\r\n\t {label:'Pub',value : 'Pub'},\r\n    ];\r\n\r\n \r\n  const [modal3, setModal3] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [modal5, setModal5] = useState(false);\r\n  const [notify1, setNotify1] = useState(false);\r\n   const [loader, setLoader] = useState(true);\r\n\r\n  const toggle4 = () => setModal4(!modal4);\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const toggle5 = () => setModal5(!modal5);\r\n\r\n\r\n  const [list, setList] = useState([]);\r\n  const [allList, setAllList] = useState([]);\r\n  const [Catorey, setCatorey] = useState([]);\r\n  const [trasactionInformation, setTrasactionInformation] = useState([]);\r\n  const [GeTtrasactionInformation, setGetTrasactionInformation] = useState(\"\");\r\n\r\n  const [checkTogglebed, setCheckTogglebed] = useState(false);\r\n  const [checkToggledrink, setcheckToggledrink] = useState(false);\r\n  const [checkTogglefoods, setcheckTogglefoods] = useState(\"\");\r\n   const [Placetype, setPlacetype] = useState([]);\r\n   const [amount, setAmount] = useState('');\r\n   const [braintreeId, setBraintreeId] = useState('');\r\n   const [cardType, setCardType] = useState('');\r\n  const [name , setName ] =useState(\"\");\r\n  const [transactionstatus , setTransactionstatus ] =useState(\"\");\r\n\r\n \r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchbyName, setSearchbyName] = useState(\"\");\r\n  \r\n\r\n    const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/, '');\r\n   \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n     getData();\r\n    \r\n   }, [])\r\n   const getData = () => {\r\n     let token = localStorage.getItem(\"key\");\r\n     if (token) {\r\n       var token1 = token.replace(/\"/g, \"\");\r\n     } else {\r\n       return <Redirect to='/' />\r\n\r\n     }\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'applicatio/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`http://codestarc.com/client/newproject/api/gettransaction`, config).then((response) => {\r\n       var dataJson = JSON.stringify(response);\r\n       var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n         setList(jsonPrser.data.data)\r\n         setLoader(false)\r\n      }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n     });\r\n   }\r\n      \r\n   const viewData = (id) => {\r\n     console.log(id);\r\n     let token = localStorage.getItem(\"key\");\r\n     var token1 = token.replace(/\"/g, \"\");\r\n     console.log(token);\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}payment/${id}`, config).then((response) => {\r\n       let dataJson = JSON.stringify(response);\r\n       let jsonPrser = JSON.parse(dataJson);\r\n       if (jsonPrser.status == 200) {\r\n         setTrasactionInformation(jsonPrser.data.creditCard)\r\n         toggle2(true)\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n\r\n     });\r\n\r\n   }\r\n  \r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  let role = localStorage.getItem(\"role\");\r\n  let isLoggedIn = localStorage.getItem(\"IsLoggedIn\")\r\n  // if (role && isLoggedIn) {\r\n  //   if (loader == true) {\r\n  //     return (\r\n  //       <Fragment>\r\n  //         <LoaderClass className=\"loader_position\" />\r\n  //       </Fragment>\r\n  //     )\r\n  //   } else {\r\n    return (\r\n\r\n        <Fragment>\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"m-0\">Transaction</h1>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <ol className=\"breadcrumb float-sm-right\">\r\n                      <li className=\"breadcrumb-item\">\r\n                      </li>\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Sl</th>\r\n                            <th>Action</th>\r\n                            <th>Amount</th>\r\n                            <th>BrainTree Id</th>\r\n                            <th>cardType</th>\r\n                            <th>Name</th>\r\n\t\t\t\t\t\t              \t<th>Transaction status</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        {list.filter((val) => {\r\n                          if (search && searchbyName == \"\") {\r\n                            return val;\r\n                           } else\r\n                  //  if (val.placeName.includes(search) ||  val.email == searchbyName) \r\n\t\t\t\t\t\t              {\r\n                            return val;\r\n                          }\r\n                        }).map((data, index) =>\r\n                          <tbody key={index}>\r\n                            <tr>\r\n                              <td>{index+1}</td>\r\n                              <td> \r\n                        <FontAwesomeIcon\r\n                                  icon={['far', 'eye']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#0710CD '}}\r\n                                  id=\"tooltipforview\"\r\n                                  outline={data.id} onClick={() => viewData(data.id)} /> <UncontrolledTooltip\r\n                                    placement=\"top\"\r\n                                    container=\"body\"\r\n                                    target=\"tooltipforview\">\r\n                                  view\r\n                     </UncontrolledTooltip></td>\r\n                              <td>{data.amount}</td>\r\n                              <td>{data.braintree_id}</td>\r\n                              <td>{data.cardType}</td>\r\n                              <td>{data.name}</td>\r\n\t\t\t\t\t\t\t                <td>{data.status}</td>\r\n                              <td className={common.status[data.status_id]}>{common.status[data.status_id]}</td>  \r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Modal className=\"custom_model_size\" zIndex={2000} centered scrollable isOpen={modal2} size=\"lg\" toggle={toggle2}>\r\n            <ModalHeader toggle={toggle2}>Information Of Transaction</ModalHeader>\r\n            <ModalBody className=\"text-center\">\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Amount :</Label>\r\n                  <Col sm={3}>\r\n                    {trasactionInformation.amount ?\r\n                      trasactionInformation.amount\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"examplePropertyName\" sm={1}>BrainTree Id</Label>\r\n                  <Col sm={3}>\r\n                    {trasactionInformation.braintree_id ?\r\n                      trasactionInformation.braintree_id\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup row >\r\n                  <Label className='view_head' htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Card Type :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {trasactionInformation.cardType ?\r\n                      trasactionInformation.cardType\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>\r\n                    Name :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {trasactionInformation.name ?\r\n                      trasactionInformation.name\r\n                      : ('Null')}\r\n                  </Col>\r\n              \r\n                </FormGroup>\r\n                 \r\n                <h3>Address</h3>\r\n                <FormGroup row>\r\n\r\n                  <Label className='view_head' htmlFor=\"hotelType\" sm={1}>Transaction Status  :</Label>\r\n                  <Col sm={3}>\r\n                    {trasactionInformation.transaction_status ?\r\n                      trasactionInformation.transaction_status\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                </FormGroup>\r\n              </Form>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle2}>\r\n                Close\r\n          </Button>{' '}\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Fragment>\r\n       )\r\n    //   }\r\n    // } else {\r\n    //   return <Redirect to='/' />\r\n    // }\r\n      }\r\n\r\n\r\n\r\nexport default Transaction;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}
{"version":3,"sources":["loader/loader.js","components/beautysalon/beautysalon.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["LoaderClass","type","color","height","width","className","React","Component","Barber","useState","indexes","modal3","setModal3","modal4","setModal4","modal2","setModal2","modal5","setModal5","toggle4","toggle3","toggle2","toggle5","list","setList","barberInformation","setbarberInformation","PolicyList","setPolicyList","loader","setLoader","checkTogglechildsuit","setCheckTogglechildsuit","checkTogglechildrate","setCheckTogglechildrate","checkTogglegroupbook","setCheckTogglegroupbook","checkTogglegroupforchild","setCheckTogglegroupforchild","fineprint","setfineprint","placeName","setPlaceName","getSalonInformation","setgetSalonInformation","setCatogery","Pubcatogery","setPubcatogery","district","setDistrict","town","setTown","salonDescription","setsalonDescription","Placetype","mobile","setMobile","dealOfferning","setdealOfferning","CatogeryError","PlaceError","Date","startDate","setStartDate","endDate","setEndDate","VoucherDate","setVoucherDate","checkTogglediscount","setCheckTogglediscount","checkToggleinfant","setCheckToggleinfant","checkToggledealpublish","setcheckToggledealpublish","address","setaddress","additionalinfo","setadditionalinfo","catogeryOptions","label","value","useEffect","getData","getPolicyData","token","localStorage","getItem","to","token1","replace","console","log","config","headers","axios","get","common","api_url","then","response","dataJson","JSON","stringify","jsonPrser","parse","status","data","catch","error","UpdateSalonById","id","payload","place_name","place_address","phone_number","category","place_short_description","additional_info","fine_print","put","res","swal","err","role","isLoggedIn","data-toggle","onClick","filter","val","map","index","key","icon","placement","style","fontSize","GetPlaceById","outline","container","target","viewForDeleteData","srt1","moment","end_data","format","toString","countDownDate","getTime","x","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","viewData","status_id","zIndex","centered","isOpen","toggle","onclick","row","htmlFor","sm","name","defaultValue","onChange","e","scrollable","size","close_mu_time","delete","users","setState","removeData","backdrop","keyboard","placeholder","for","placeholderText","showTimeSelect","dateFormat","selected","selectsStart","date","selectsEnd","minDate","readonly","marginLeft","description","evt","preventDefault","start_date","end_date","post","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","call","from","TypeError"],"mappings":"+NAGqBA,G,wLAGjB,OACE,kBAAC,IAAD,CACEC,KAAK,UACLC,MAAM,QACNC,OAAQ,IACRC,MAAO,IACPC,UAAU,wB,GATuBC,IAAMC,a,oZCokDhCC,UA/hDL,WAAmB,IAAD,SAEcC,mBAAS,IAFvB,mBAETC,EAFS,aAGID,mBAAS,IAHb,gCAiBEA,oBAAS,IAjBX,mBAiBnBE,EAjBmB,KAiBXC,EAjBW,OAkBEH,oBAAS,GAlBX,mBAkBnBI,EAlBmB,KAkBXC,EAlBW,OAmBEL,oBAAS,GAnBX,mBAmBnBM,EAnBmB,KAmBXC,EAnBW,OAoBEP,oBAAS,GApBX,mBAoBnBQ,EApBmB,KAoBXC,EApBW,OAqBIT,oBAAS,GArBb,mBAuBpBU,GAvBoB,UAuBV,kBAAML,GAAWD,KAC3BO,EAAU,kBAAMR,GAAWD,IAC3BU,EAAU,kBAAML,GAAWD,IAC3BO,GAAU,kBAAMJ,GAAWD,IA1BP,GA6BFR,mBAAS,IA7BP,qBA6BnBc,GA7BmB,MA6BbC,GA7Ba,SA+BwBf,mBAAS,IA/BjC,qBA+BnBgB,GA/BmB,MA+BAC,GA/BA,SAgCUjB,mBAAS,IAhCnB,qBAgCnBkB,GAhCmB,MAgCPC,GAhCO,SAiCEnB,oBAAS,GAjCX,qBAiCnBoB,GAjCmB,MAiCXC,GAjCW,SAuC8BrB,oBAAS,GAvCvC,qBAuCnBsB,GAvCmB,MAuCGC,GAvCH,SAwC8BvB,oBAAS,GAxCvC,qBAwCnBwB,GAxCmB,MAwCGC,GAxCH,SAyC8BzB,oBAAS,GAzCvC,qBAyCnB0B,GAzCmB,MAyCGC,GAzCH,SA0CsC3B,oBAAS,GA1C/C,qBA0CnB4B,GA1CmB,MA0COC,GA1CP,SA2C0B7B,oBAAS,GA3CnC,qCA6C0BA,oBAAS,IA7CnC,qCA8C0BA,oBAAS,IA9CnC,qCAiDQA,mBAAS,KAjDjB,qBAiDnB8B,GAjDmB,MAiDRC,GAjDQ,SAmDkB/B,mBAAS,IAnD3B,qCAoDQA,mBAAS,KApDjB,qBAoDnBgC,GApDmB,MAoDRC,GApDQ,SAqD4BjC,mBAAS,IArDrC,qBAqDnBkC,GArDmB,MAqDEC,GArDF,SAsDMnC,mBAAS,IAtDf,qBAsDToC,IAtDS,gBAuDYpC,mBAAS,IAvDrB,qBAuDnBqC,GAvDmB,MAuDNC,GAvDM,SAwDMtC,mBAAS,IAxDf,qBAwDnBuC,GAxDmB,MAwDTC,GAxDS,SA0DFxC,mBAAS,IA1DP,qBA0DnByC,GA1DmB,MA0DbC,GA1Da,SA2DsB1C,mBAAS,IA3D/B,qBA2DnB2C,GA3DmB,MA2DDC,GA3DC,SA4DO5C,mBAAS,IA5DhB,qBA4DpB6C,GA5DoB,gBA8DE7C,mBAAS,KA9DX,qBA8DnB8C,GA9DmB,MA8DXC,GA9DW,SA+DQ/C,mBAAS,IA/DjB,qCAgEIA,mBAAS,KAhEb,qCAiEgBA,mBAAS,KAjEzB,qBAiEnBgD,GAjEmB,MAiEJC,GAjEI,SAkEgBjD,mBAAS,IAlEzB,qBAkEnBkD,GAlEmB,gBAmEUlD,mBAAS,KAnEnB,qBAmEnBmD,GAnEmB,gBAoEQnD,mBAAS,IAAIoD,OApErB,qBAoEnBC,GApEmB,MAoERC,GApEQ,SAqEItD,mBAAS,IAAIoD,MArEjB,qBAqEnBG,GArEmB,MAqEVC,GArEU,SAsEYxD,mBAAS,IAAIoD,MAtEzB,qBAsEnBK,GAtEmB,MAsENC,GAtEM,SAwE4B1D,oBAAS,GAxErC,qBAwEnB2D,GAxEmB,MAwEEC,GAxEF,SAyEoB5D,oBAAS,GAzE7B,qCA0EwBA,oBAAS,IA1EjC,qBA0EnB6D,GA1EmB,MA0EAC,GA1EA,SA2EkC9D,oBAAS,GA3E3C,qBA2EnB+D,GA3EmB,MA2EKC,GA3EL,SA6EIhE,mBAAS,IA7Eb,qBA6EnBiE,GA7EmB,MA6EVC,GA7EU,SA8EkBlE,mBAAS,IA9E3B,qBA8EnBmE,GA9EmB,MA8EHC,GA9EG,SAgFEpE,mBAAS,IAhFX,qCAiFcA,mBAAS,KAjFvB,qBAmFrBqE,IAnFqB,YAmFH,CACrB,CAAEC,MAAO,SAAUC,MAAM,UACzB,CAAED,MAAO,eAAgBC,MAAO,gBAC9B,CAAED,MAAO,kBAAmBC,MAAO,mBACrC,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,UAAWC,MAAO,aAuE7BC,qBAAU,WACPC,KAEAC,OACC,IACH,IAAMD,GAAU,WACd,IAAIE,EAAQC,aAAaC,QAAQ,OACjC,IAAIF,EAIF,OAAO,kBAAC,WAAD,CAAUG,GAAG,MAHpB,IAAIC,EAASJ,EAAMK,QAAQ,KAAM,IACjCC,QAAQC,IAAIP,GAKd,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,kBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMC,IAAN,UAAaC,IAAOC,QAApB,oBAA+CL,GAAQM,MAAK,SAACC,GAC3D,IAAIC,EAAWC,KAAKC,UAAUH,GAC1BI,EAAYF,KAAKG,MAAMJ,GACJ,KAApBG,EAAUE,SACXjF,GAAQ+E,EAAUG,KAAKA,MACxB5E,IAAU,OAGV6E,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,EAAO,cAIjBzB,GAAgB,WACrB,IAAIC,EAAQC,aAAaC,QAAQ,OACjC,IAAIF,EAGF,OAAO,kBAAC,WAAD,CAAUG,GAAG,MAFpB,IAAIC,EAASJ,EAAMK,QAAQ,KAAM,IAK7BG,EAAS,CACbC,QAAS,CACP,eAAgB,kBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMC,IAAN,UAAaC,IAAOC,QAApB,cAAyCL,GAAQM,MAAK,SAACC,GACrD,IAAIC,EAAWC,KAAKC,UAAUH,GAC1BI,EAAYF,KAAKG,MAAMJ,GACH,KAApBG,EAAUE,QACZ7E,GAAc2E,EAAUG,KAAKA,SAE9BC,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,EAAO,cAwJjBC,GAAkB,SAACC,GAGvB,IACItB,EADQH,aAAaC,QAAQ,OACdG,QAAQ,KAAM,IAC3BG,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAGtBuB,EAAQ,CACTC,WAAYvE,GACZwE,cAAevC,GACfxB,KAAMA,GACNF,SAAUA,GACVkE,aAAc3D,GACd4D,SAASrE,GACTsE,wBAAyBhE,GAEzBiE,gBAAiBzC,GAKhB0C,WAAY/E,IAIrBuD,IAAMyB,IAAN,UAAavB,IAAOC,QAApB,4BAA+Ca,GAAMC,EAASnB,GAC3DM,MAAK,SAAAsB,GACJ,GAAIA,EAIF,OAHAlG,KACN4D,KACMuC,IAAK,8BAA+B,WAC7BD,EAAId,KAAKA,QAEjBC,OAAM,SAAAe,GACPhC,QAAQC,IAAI+B,OAOdC,IAFUtC,aAAaC,QAAQ,SAExBD,aAAaC,QAAQ,SAC5BsC,GAAavC,aAAaC,QAAQ,cACtC,OAAIqC,IAAQC,GACI,GAAV/F,GAEA,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAaxB,UAAU,qBAMzB,kBAAC,WAAD,KACE,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,OAAd,iBAGF,yBAAKA,UAAU,YACb,wBAAIA,UAAU,6BACZ,wBAAIA,UAAU,mBAAkB,kBAAC,IAAD,CAAQA,UAAU,MAAMH,MAAM,SAAS2H,cAAY,QAAQC,QAAS1G,GAApE,oBAU5C,6BAASf,UAAU,WACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,2BAAOyG,GAAG,WAAWzG,UAAU,sCAC7B,+BACE,4BACE,6BACA,6BACA,6BAEE,6BACF,6BAKA,8BAEF,4BACE,kCACA,sCACA,sCACA,6CACA,wCACA,2CAGHkB,GAAKwG,QAAO,SAACC,GACZ,OACSA,KAMRC,KAAI,SAACvB,EAAMwB,GAAP,OACL,2BAAOC,IAAKD,GACV,4BACE,4BAAKA,EAAM,GACX,iCAAM,kBAAC,IAAD,CACJE,KAAM,CAAC,MAAO,QACd/H,UAAU,gBACXgI,UAAU,MACTC,MAAO,CAACC,SAAS,GAAGrI,MAAM,WAC1B4H,QAAS,kBA9JlB,SAAChB,GACpB,IAAI1B,EAAQC,aAAaC,QAAQ,OAC7BE,EAASJ,EAAMK,QAAQ,KAAM,IACjCC,QAAQC,IAAIP,GACZ,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMC,IAAN,UAAaC,IAAOC,QAApB,4BAA+Ca,GAAMlB,GAAQM,MAAK,SAACC,GACjE,IAAIC,EAAWC,KAAKC,UAAUH,GAC1BI,EAAYF,KAAKG,MAAMJ,GACH,KAApBG,EAAUE,SACZ7D,GAAuB2D,EAAUG,KAAKA,MACtChE,GAAa6D,EAAUG,KAAKA,KAAKM,YACjCnE,GAAY0D,EAAUG,KAAKA,KAAKS,UAChC3D,GAAU+C,EAAUG,KAAKA,KAAKQ,cAC9B/D,GAAQoD,EAAUG,KAAKA,KAAKxD,MACtBD,GAAYsD,EAAUG,KAAKA,KAAK1D,UAChC2B,GAAW4B,EAAUG,KAAKA,KAAKO,eACrCvB,QAAQC,IAAIhD,IACZrB,SAEDqF,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,EAAO,aAoIsB4B,CAAa9B,EAAKI,KACjCA,GAAG,iBACH2B,QAAS/B,EAAKI,KACd,kBAAC,IAAD,CACEuB,UAAU,MACVK,UAAU,OACVC,OAAO,kBAHT,QARF,YAcL,kBAAC,IAAD,CACSP,KAAM,CAAC,MAAO,aACd/H,UAAU,gBACVgI,UAAU,MACVC,MAAO,CAACC,SAAS,GAAGrI,MAAM,YAC1B4G,GAAG,mBACH9B,MAAO0B,EAAKI,GACZgB,QAAS,kBAxMf,SAAChB,GACxBpB,QAAQC,IAAImB,GACZ,IAAI1B,EAAQC,aAAaC,QAAQ,OAC7BE,EAASJ,EAAMK,QAAQ,KAAM,IACjCC,QAAQC,IAAIP,GACZ,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMC,IAAN,UAAaC,IAAOC,QAApB,4BAA+Ca,GAAMlB,GAAQM,MAAK,SAACC,GACjE,IAAIC,EAAWC,KAAKC,UAAUH,GAC1BI,EAAYF,KAAKG,MAAMJ,GACH,KAApBG,EAAUE,SACZ/E,GAAqB6E,EAAUG,KAAKA,MACpCvF,QAEDwF,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,EAAO,aAoLuBgC,CAAkBlC,EAAKI,KACtC2B,QAAS/B,EAAKI,KAEhB,kBAAC,IAAD,CACEuB,UAAU,MACVK,UAAU,OACVC,OAAO,oBAHT,UAxBF,YA8BN,kBAAC,IAAD,CACUP,KAAM,CAAC,MAAO,OACd/H,UAAU,gBACVgI,UAAU,MACVC,MAAO,CAACC,SAAS,GAAGrI,MAAM,YAC1B4G,GAAG,iBACH2B,QAAS/B,EAAKI,GAAIgB,QAAS,kBAtRzC,SAAChB,GAChBpB,QAAQC,IAAImB,GACZ,IAAI1B,EAAQC,aAAaC,QAAQ,OAC7BE,EAASJ,EAAMK,QAAQ,KAAM,IACjCC,QAAQC,IAAIP,GACZ,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMC,IAAN,UAAaC,IAAOC,QAApB,4BAA+Ca,GAAMlB,GAAQM,MAAK,SAACC,GACjE,IAAIC,EAAWC,KAAKC,UAAUH,GAC1BI,EAAYF,KAAKG,MAAMJ,GAC3B,GAAwB,KAApBG,EAAUE,SACZ/E,GAAqB6E,EAAUG,KAAKA,MACpCrF,IAC6B,MAA1BkF,EAAUG,KAAKA,KAAKI,IACO,MAA1BP,EAAUG,KAAKA,KAAKI,IAAW,CAChC,IACI+B,EADUC,IAAOvC,EAAUG,KAAKA,KAAKqC,UAAUC,OAAO,cACvCC,WACfC,EAAgB,IAAIrF,KAAKgF,GAAMM,UACnCzD,QAAQC,IAAIuD,EAAc,eAAeL,GAEzC,IAAIO,EAAIC,aAAY,WAGNP,IAAOvC,EAAUG,KAAKA,KAAKqC,UAAUC,OAAO,cACvCC,WADpB,IAGIK,GAAM,IAAIzF,MAAOsF,UAEhBI,EAAWL,EAAgBI,EAC7B5D,QAAQC,IAAI4D,EAAS,kBAEvB,IAAIC,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAT,MACnBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAGb,MAAnCO,SAASC,eAAe,UAE5BD,SAASC,eAAe,QAAQC,UAAYR,EAAO,KAAOG,EAAQ,KAChEC,EAAU,KAAOC,EAAU,KAGzBN,EAAW,IACbU,cAAcb,GACdU,SAASC,eAAe,QAAQC,UAAY,cAG7C,SAILrD,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,EAAO,aA4NyCsD,CAASxD,EAAKI,OApCnD,IAoC2D,kBAAC,IAAD,CACrDuB,UAAU,MACVK,UAAU,OACVC,OAAO,kBAH8C,SAM3D,4BAAKjC,EAAKQ,cACV,4BAAKR,EAAKxD,MACV,4BAAKwD,EAAKO,eACV,4BAAKP,EAAKM,YACT,wBAAI3G,UAAW2F,IAAOS,OAAOC,EAAKyD,YAAanE,IAAOS,OAAOC,EAAKyD,YAGtC,kBAAC,IAAD,CAAOC,OAAQ,IAAMC,UAAQ,EAAChK,UAAU,oBAAoBiK,OAAQrJ,EAAQsJ,OAAQjJ,IAC/G,kBAAC,IAAD,CAAaiJ,OAAQjJ,IAArB,cACA,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAMkJ,QAAS,kBAAM3D,GAAgBH,EAAKI,MACxC,kBAAC,IAAD,CAAW2D,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,iBAAiBC,GAAI,GAApC,cACF,kBAAC,IAAD,CAAKA,GAAI,GACL,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,YACH8D,KAAK,eACnCC,aAAclI,GAAoBqE,WAClChC,MAAOvC,GACuBqI,SAAU,SAAAC,GAAC,OAAIrI,GAAaqI,EAAEpC,OAAO3D,WAMzC,kBAAC,IAAD,CAAO0F,QAAQ,8BAA8BC,GAAI,GAAjD,YAGA,kBAAC,IAAD,CAAKA,GAAI,GAC/B,kBAAC,IAAD,CAC6B1K,KAAK,SACL2K,KAAK,aACL9D,GAAI,8BACJ9B,MAAOlC,GAAYgE,GACpD+D,aAAclI,GAAoBwE,SACD2D,SAAU,SAAAC,GAAC,OAAIhI,GAAegI,EAAEpC,OAAO3D,SACxC,gDACCF,GAAgBmD,KAAI,SAACvB,EAAMwB,GAAP,OACtD,4BAAQC,IAAKD,EAAOlD,MAAO0B,EAAK1B,OAAQ0B,EAAK3B,UATxC,MAcJ,kBAAC,IAAD,CAAO2F,QAAQ,iBAAiBC,GAAI,GAApC,gBAG0B,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,SACL6G,GAAG,WACH9B,MAAOzB,GACPsH,aAAclI,GAAoBuE,aAClC4D,SAAU,SAAAC,GAAC,OAAIvH,GAAUuH,EAAEpC,OAAO3D,YAMxC,kBAAC,IAAD,CAAWyF,KAAG,GACxC,kBAAC,IAAD,CAAOC,QAAQ,sBAAsBC,GAAI,GAAzC,iBAC4B,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL2K,KAAK,QACL9D,GAAG,UACjC9B,MAAON,GACLmG,aAAclI,GAAoBsE,cACN6D,SAAU,SAAAC,GAAC,OAAIpG,GAAWoG,EAAEpC,OAAO3D,WAGvE,kBAAC,IAAD,CAAO0F,QAAQ,sBAAsBC,GAAI,GAAzC,QACgC,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL2K,KAAK,QACL9D,GAAG,OACH+D,aAAclI,GAAoBO,KAC/D8B,MAAO9B,GACyB4H,SAAU,SAAAC,GAAC,OAAI5H,GAAQ4H,EAAEpC,OAAO3D,WAIxC,kBAAC,IAAD,CAAO0F,QAAQ,iBAAiBC,GAAI,GAApC,YAEC,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,WACF9B,MAAOhC,GACP6H,aAAclI,GAAoBK,SAClC8H,SAAU,SAAAC,GAAC,OAAI9H,GAAY8H,EAAEpC,OAAO3D,cAQ/C,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAQ9E,MAAM,UAAUG,UAAU,UAAUyH,QAAS,kBAAMjB,GAAgBH,EAAKI,MAAhF,wBAiBzB,kBAAC,IAAD,CAAOzG,UAAU,oBAAoB+J,OAAQ,IAAMC,UAAQ,EAACW,YAAU,EAACV,OAAQvJ,EAAQkK,KAAK,KAAKV,OAAQlJ,GACvG,kBAAC,IAAD,CAAakJ,OAAQlJ,GAArB,wBACA,kBAAC,IAAD,CAAWhB,UAAU,eACnB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAWoK,KAAG,GACV,kBAAC,IAAD,CAAKE,GAAI,IACT,yBAAK7D,GAAG,WAGV,kBAAC,IAAD,CAAW2D,KAAG,GACZ,kBAAC,IAAD,CAAOpK,UAAU,YAAYqK,QAAQ,iBAAiBC,GAAI,GAA1D,gBACA,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkBuF,WACjBvF,GAAkBuF,WACf,QAGP,kBAAC,IAAD,CAAO3G,UAAU,YAAYqK,QAAQ,sBAAsBC,GAAI,GAA/D,gBACA,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkByJ,cACjBzJ,GAAkByJ,cACf,SAKT,kBAAC,IAAD,CAAWT,KAAG,GACZ,kBAAC,IAAD,CAAOpK,UAAU,YAAYqK,QAAQ,8BAA8BC,GAAI,GAAvE,cAGA,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkB0F,SACjB1F,GAAkB0F,SACf,QAGP,kBAAC,IAAD,CAAO9G,UAAU,YAAYqK,QAAQ,iBAAiBC,GAAI,GAA1D,gBAGA,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkByF,aACjBzF,GAAkByF,aACf,SAKT,uCACA,kBAAC,IAAD,CAAWuD,KAAG,GACZ,kBAAC,IAAD,CAAOpK,UAAU,YAAYqK,QAAQ,iBAAiBC,GAAI,GAA1D,UACF,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkByB,MAInB,kBAAC,IAAD,CAAO7C,UAAU,YAAYqK,QAAQ,YAAYC,GAAI,GAArD,eACA,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkBuB,SACjBvB,GAAkBuB,SACf,QAEjB,kBAAC,IAAD,CAAO3C,UAAU,YAAYqK,QAAQ,YAAYC,GAAI,GAArD,cACU,kBAAC,IAAD,CAAKA,GAAI,GACNlJ,GAAkBwF,cACjBxF,GAAkBwF,cACf,WAOb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ/G,MAAM,OAAOG,UAAU,gBAAgByH,QAASzG,GAAxD,SAEM,MAIV,kBAAC,IAAD,CAAO+I,OAAQ,IAAMC,UAAQ,EAACY,KAAK,KAAKX,OAAQzJ,EAAQ0J,OAAQpJ,GAC9D,kBAAC,IAAD,CAAaoJ,OAAQpJ,GAArB,gBACA,kBAAC,IAAD,KACE,0DAAgCM,GAAkBuF,WAAlD,MAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ9G,MAAM,OAAOG,UAAU,gBAAgByH,QAAS3G,GAAxD,SAE6B,IAC7B,kBAAC,IAAD,CAAQjB,MAAM,UAAUG,UAAU,UAAUyH,QAAS,kBAvgB9C,SAAChB,GAClB,IAAI1B,EAAQC,aAAaC,QAAQ,OAC7BE,EAASJ,EAAMK,QAAQ,KAAM,IACjCC,QAAQC,IAAIP,GAEZ,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAG/BM,IAAMqF,OAAN,UAAgBnF,IAAOC,QAAvB,4BAAkDa,GAAMlB,GACrDM,MAAK,SAAAsB,GACJ,GAAIA,EAAK,CACPrG,IACAsG,IAAK,6BACLvC,KACA,IAAMkG,EAAQ5D,EAAId,KAClB,EAAK2E,SAAS,CAAED,cAEjBzE,OAAM,SAAAe,GACPhC,QAAQC,IAAI+B,MAifqD4D,CAAW7J,GAAkBqF,MAAxF,YASJ,kBAAC,IAAD,CAAOsD,OAAQ,IAAMC,UAAQ,EAAChK,UAAU,oBAAoBiK,OAAQ3J,EAAQ4J,OAAQnJ,EAASmK,SAAS,SAASC,UAAU,GACvH,kBAAC,IAAD,CAAajB,OAAQnJ,GAArB,aACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWqJ,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,iBAAiBC,GAAI,GAApC,cACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,YACH8D,KAAK,eAEL5F,MAAOvC,GACPqI,SAAU,SAAAC,GAAC,OAAIrI,GAAaqI,EAAEpC,OAAO3D,UAExB,IAAdpB,GACC,kBAAC,IAAD,CAAO0E,MAAO,CAAEpI,MAAO,QACpB0D,IAED,MAEjB,kBAAC,IAAD,CAAO8G,QAAQ,YAAYC,GAAI,GAA/B,WACW,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,UACH8D,KAAK,eACL5F,MAAON,GACPoG,SAAU,SAAAC,GAAC,OAAIpG,GAAWoG,EAAEpC,OAAO3D,WAGjD,kBAAC,IAAD,CAAO0F,QAAQ,iBAAiBC,GAAI,GAApC,gBAGU,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,SACL6G,GAAG,WACH8D,KAAK,eACL5F,MAAOzB,GACPuH,SAAU,SAAAC,GAAC,OAAIvH,GAAUuH,EAAEpC,OAAO3D,YAOxC,kBAAC,IAAD,CAAWyF,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,iBAAiBC,GAAI,GAApC,QACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,OACH9B,MAAO9B,GACP4H,SAAU,SAAAC,GAAC,OAAI5H,GAAQ4H,EAAEpC,OAAO3D,WAGpC,kBAAC,IAAD,CAAO0F,QAAQ,YAAYC,GAAI,GAA/B,YACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,WACH8D,KAAK,eACL5F,MAAOhC,GACP8H,SAAU,SAAAC,GAAC,OAAI9H,GAAY8H,EAAEpC,OAAO3D,YAMtC,kBAAC,IAAD,KACO,kBAAC,IAAD,CAAO0F,QAAQ,sBAAsBC,GAAI,GAAzC,iBAClB,8BAGW,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,0CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,2CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,6CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,4CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,0CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,4CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,oCAK5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,GAAI,GACP,2BAAO1K,KAAK,WAAW+E,MAAM,MAE/B,kBAAC,IAAD,CAAK2F,GAAI,GACP,0CAIF,kBAAC,IAAD,CAAOD,QAAQ,cAAcC,GAAI,GAAjC,6BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,qBACH8D,KAAK,qBAAqBa,YAAY,qCAOlD,kBAAC,IAAD,CAAWhB,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,8BAA8BC,GAAI,GAAjD,YAGA,kBAAC,IAAD,CAAKA,GAAI,GAEX,kBAAC,IAAD,CAC6B1K,KAAK,SACL2K,KAAK,aACL9D,GAAI,8BACJ9B,MAAOlC,GAAYgE,GACnBgE,SAAU,SAAAC,GAAC,OAAIhI,GAAegI,EAAEpC,OAAO3D,SACxC,gDACCF,GAAgBmD,KAAI,SAACvB,EAAMwB,GAAP,OACxB,4BAAQC,IAAKD,EAAOlD,MAAO0B,EAAK1B,OAAQ0B,EAAK3B,UARtE,KAWsB,IAAjBpB,GACC,kBAAC,IAAD,CAAO2E,MAAO,CAAEpI,MAAO,QACpByD,IAED,MAGR,kBAAC,IAAD,CAAO+G,QAAQ,eAAeC,GAAI,GAAlC,yCACiB,kBAAC,IAAD,CAAKA,GAAI,GACtB,kBAAC,IAAD,CACE1K,KAAK,WACL2K,KAAK,iBACL9D,GAAG,iBACH9B,MAAO5B,GACP0H,SAAU,SAAAC,GAAC,OAAI1H,GAAoB0H,EAAEpC,OAAO3D,WAGnD,kBAAC,IAAD,CAAO0F,QAAQ,sBAAsBC,GAAI,GAAzC,0BACG,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,WACL2K,KAAK,iBACL9D,GAAG,iBACH9B,MAAOJ,GACPkG,SAAU,SAAAC,GAAC,OAAIlG,GAAkBkG,EAAEpC,OAAO3D,YAMvD,kBAAC,IAAD,CAAWyF,KAAG,GAEb,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,kCACU,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAOR,GACPsG,SAAU,SAAAC,GAAC,OAAItG,GAAoD,GAA1BD,SAKxB,GAA1BA,GACD,oCACF,kBAAC,IAAD,CAAWiG,KAAG,GACd,kBAAC,IAAD,CAAOC,QAAQ,YAAYC,GAAI,GAA/B,2CACU,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,OACL6G,GAAG,WACH8D,KAAK,eACL5F,MAAOvB,GACPqH,SAAU,SAAAC,GAAC,OAAIrH,GAAiBqH,EAAEpC,OAAO3D,WAGrD,kBAAC,IAAD,CAAO0F,QAAQ,YAAYC,GAAI,GAA/B,2CACQ,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CACE1K,KAAK,WACL6G,GAAG,YACH8D,KAAK,YACL5F,MAAOzC,GACPkJ,YAAY,2JACZX,SAAU,SAAAC,GAAC,OAAIvI,GAAauI,EAAEpC,OAAO3D,YAInD,kBAAC,IAAD,KACQ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0G,IAAI,eAAef,GAAI,IAAI,iDAClC,kBAAC,IAAD,CAAWF,KAAG,GACZ,6BACA,kBAAC,IAAD,CAAKE,GAAI,GACP,+BAAO,2BAAO1K,KAAK,WAAW+E,MAAM,QAApC,qBAIF,kBAAC,IAAD,CAAK2F,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,OACV2K,KAAK,gBACL9D,GAAG,gBACH2E,YAAY,6CAIlB,kBAAC,IAAD,CAAWhB,KAAG,GACZ,kBAAC,IAAD,CAAKE,GAAI,GACP,+BAAO,2BAAO1K,KAAK,WAAW+E,MAAM,QAApC,gCAIF,kBAAC,IAAD,CAAK2F,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,OACV2K,KAAK,uBACL9D,GAAG,uBACH2E,YAAY,qDAGlB,kBAAC,IAAD,CAAWhB,KAAG,GACZ,kBAAC,IAAD,CAAKE,GAAI,GACP,+BAAO,2BAAO1K,KAAK,WAAW+E,MAAM,QAApC,iCAMJ,kBAAC,IAAD,CAAWyF,KAAG,GACZ,kBAAC,IAAD,CAAKE,GAAI,GACP,+BAAO,2BAAO1K,KAAK,WAAW+E,MAAM,QAApC,uMAOJ,kBAAC,IAAD,CAAWyF,KAAG,GACZ,kBAAC,IAAD,CAAKE,GAAI,GACP,kBAAC,IAAD,KAAO,2BAAO1K,KAAK,WAAW+E,MAAM,QAApC,0CAIZ,kBAAC,IAAD,CAAO0F,QAAQ,gBAAgBC,GAAI,GAAnC,YACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAXR,KAaA,kBAAC,IAAD,CAAOf,QAAQ,gBAAgBC,GAAI,GAAnC,UACR,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEhB,kBAAC,IAAD,CAAKd,GAAI,GACT,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAO1K,KAAK,OACV2K,KAAK,cACL9D,GAAG,cACH2E,YAAY,4BAGb/K,EAAQuH,KAAI,SAAAC,GACI,kBAAcA,EAAd,KACf,OACE,oCACE,kBAAC,IAAD,CAAWuC,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,8BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,WACV2K,KAAK,mBACL9D,GAAG,cACH2E,YAAY,8BAOhB,6BACA,kBAAC,IAAD,CAAWpL,UAAU,mBAEnB,kBAAC,IAAD,CAAQH,MAAM,UAAUG,UAAU,+BAAlC,iCAMJ,kBAAC,IAAD,KACA,kBAAC,IAAD,KACA,6CACE,kBAAC,IAAD,CAAWoK,KAAG,GACd,kBAAC,IAAD,CAAKE,GAAI,GACR,kBAAC,IAAD,CACA7D,GAAG,kBACF6E,gBAAgB,oBAChBC,gBAAc,EACdC,WAAW,sBACXC,SAAUhI,GACViI,cAAY,EACZjI,UAAWA,GACXE,QAASA,GACT8G,SAAU,SAAAkB,GAAI,OAAIjI,GAAaiI,OAGnC,kBAAC,IAAD,CAAOtB,QAAQ,iBAAiBC,GAAI,GAApC,YACA,kBAAC,IAAD,CAAKA,GAAI,GACT,kBAAC,IAAD,CACC7D,GAAG,kBACF6E,gBAAgB,kBAChBC,gBAAc,EACdC,WAAW,sBACXC,SAAU9H,GACViI,YAAU,EACVnI,UAAWA,GACXE,QAASA,GACTkI,QAASpI,GACTgH,SAAU,SAAAkB,GAAI,OAAI/H,GAAW+H,OAG/B,kBAAC,IAAD,CAAOtB,QAAQ,iBAAiBC,GAAI,GAApC,8DACA,kBAAC,IAAD,CAAKA,GAAI,GACT,kBAAC,IAAD,CACC7D,GAAG,kBACHgF,SAAU5H,GACV4G,SAAU,SAACkB,GAAD,OAAU7H,GAAe6H,UAMtC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWvB,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,mBAAmBC,GAAI,GAAtC,2CACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAOZ,GACP0G,SAAU,SAAAC,GAAC,OAAI1G,GAA8C,GAAvBD,QAIlB,GAAvBA,GACC,oCACE,kBAAC,IAAD,CAAOsG,QAAQ,eAAeC,GAAI,GAAlC,wBACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,OACV2K,KAAK,uBACL9D,GAAG,uBACH2E,YAAY,kBAGhB,IAEL/K,EAAQuH,KAAI,SAAAC,GACI,kBAAcA,EAAd,KACf,OACE,oCACE,kBAAC,IAAD,CAAWuC,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,8BACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,WACV2K,KAAK,mBACL9D,GAAG,cACH2E,YAAY,8BAOxB,6BACA,kBAAC,IAAD,CAAWpL,UAAU,mBAEnB,kBAAC,IAAD,CAAQH,MAAM,UAAUG,UAAU,+BAAlC,iCAMX,kBAAC,IAAD,KACO,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqL,IAAI,aAAaf,GAAI,IAAI,uEAEhC,kBAAC,IAAD,CAAWF,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,qDAEA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,gBAIT,kBAAC,IAAD,CAAW2D,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,+FAEA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAOjD,GACP+I,SAAU,SAAAC,GAAC,OAAI/I,GAAgD,GAAxBD,SAMpB,GAAxBA,GACC,oCACE,kBAAC,IAAD,CAAW0I,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,2CAEA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAO/C,GACP6I,SAAU,SAAAC,GAAC,OAAI7I,GAAgD,GAAxBD,SAMpB,GAAxBA,GACC,oCACE,kBAAC,IAAD,CAAWwI,KAAG,GAGZ,kBAAC,IAAD,CAAOC,QAAQ,gBAAgBC,GAAI,GAAnC,yBACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MARlB,KAUU,kBAAC,IAAD,CAAOf,QAAQ,gBAAgBC,GAAI,GAAnC,aACR,kBAAC,IAAD,CAAOD,QAAQ,gBAAgBC,GAAI,GAAnC,YACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,qCACN,kBAAC,IAAD,CAAKd,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,0CAER,kBAAC,IAAD,CAAWhB,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,gBAAgBC,GAAI,GAAnC,UACA,kBAAC,IAAD,CAAKA,GAAI,GACf,kBAAC,iBAAD,CACE3F,MAAOV,GACPwG,SAAU,SAAAC,GAAC,OAAIxG,GAA0C,GAArBD,SAIlB,GAArBA,GACG,oCACE,kBAAC,IAAD,CAAWmG,KAAG,GACZ,kBAAC,IAAD,CAAKE,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,OACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,OAAOzG,MAAM,OAAOmH,UAAQ,KAEtC,kBAAC,IAAD,CAAOzB,QAAQ,gBAAgBC,GAAI,IACzC,kBAAC,IAAD,CAAOD,QAAQ,gBAAgBC,GAAI,GAAnC,YACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,qCACN,kBAAC,IAAD,CAAKd,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,2CAKR,IAEA,IAEJ,GAEJ,kBAAC,IAAD,CAAWhB,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,qCAGA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAO7C,GACP2I,SAAU,SAAAC,GAAC,OAAI3I,GAAgD,GAAxBD,SAKpB,GAAxBA,GACC,oCACE,kBAAC,IAAD,CAAWsI,KAAG,GAGZ,kBAAC,IAAD,CAAOC,QAAQ,gBAAgBC,GAAI,GAAnC,UACA,kBAAC,IAAD,CAAOD,QAAQ,gBAAgBC,GAAI,GAAnC,UAAoD,kBAAC,IAAD,CAAKA,GAAI,GAC3D,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,mBARlB,IAUS,kBAAC,IAAD,CAAOf,QAAQ,gBAAgBC,GAAI,GAAnC,QACP,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,mBAGhB,kBAAC,IAAD,CAAOf,QAAQ,gBAAgBC,GAAI,GAAnC,OACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MACV,kBAAC,IAAD,CAAOf,QAAQ,gBAAgBC,GAAI,GAAnC,uCAER,kBAAC,IAAD,CAAWtK,UAAU,iCAEzB,kBAAC,IAAD,CAAQH,MAAM,UAAUG,UAAU,6CAAlC,kBAII,kBAAC,IAAD,CAAWoK,KAAG,GAEZ,kBAAC,IAAD,CAAOC,QAAQ,eAAeC,GAAI,GAAlC,gDACA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,iBAAD,CACE3F,MAAO3C,GACPyI,SAAU,SAAAC,GAAC,OAAIzI,GAAwD,GAA5BD,SAKpB,GAA5BA,GACC,oCACE,kBAAC,IAAD,CAAWoI,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,gBAAgBC,GAAI,GAAnC,gCAEA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,qCACN,kBAAC,IAAD,CAAKd,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,0CAER,kBAAC,IAAD,CAAWhB,KAAG,GACZ,kBAAC,IAAD,CAAOC,QAAQ,gBAAgBC,GAAI,GAAnC,8BAEA,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,qCACN,kBAAC,IAAD,CAAKd,GAAI,GACP,kBAAC,IAAD,CAAO1K,KAAK,SACV2K,KAAK,YACL9D,GAAG,YACH2E,YAAY,MAEV,2CAMR,IAER,KAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,SAASf,GAAI,GAAG,qDAC3B,kBAAC,IAAD,KACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKA,GAAI,IACX,kBAAC,IAAD,CAAOA,GAAI,GAAX,4DAEI,kBAAC,IAAD,KACChJ,GAAWsG,KAAI,SAACvB,EAAMwB,GAAP,OACd,kBAAC,IAAD,CAAKC,IAAKD,EAAOyC,GAAI,IACxB,kBAAC,IAAD,CAAOrC,MAAO,CAAC8D,WAAW,SAAS,2BAAOnM,KAAK,aAAayG,EAAK2F,qBAOtE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,GAAI,IACT,wBAAItK,UAAU,6BAAd,qDAEF,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsK,GAAI,IACT,kBAAC,IAAD,CAAKA,GAAI,IACP,qOAOV,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,IACT,wBAAItK,UAAU,6BAAd,2BAEF,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsK,GAAI,IACT,kBAAC,IAAD,CAAKA,GAAI,IACP,2IAGA,6VAEA,mKACA,2JACA,uHACA,8MAEA,mNAQV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,IACT,wBAAItK,UAAU,6BAAd,uBAEF,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsK,GAAI,IACT,kBAAC,IAAD,CAAKA,GAAI,IACP,uJAEA,qHACA,mIAOV,KAGN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzK,MAAM,OAAOG,UAAU,gBAAgByH,QAAS1G,GAAxD,SAEM,IACN,kBAAC,IAAD,CAAQlB,MAAM,UAAUG,UAAU,UAAUyH,QAx6CjC,SAACwE,GACtBA,EAAIC,iBACP7G,QAAQC,IAAIrC,IACV,IAAI8B,EAAQC,aAAaC,QAAQ,OAC5BE,EAASJ,EAAMK,QAAQ,IAAK,IAChCC,QAAQC,IAAIP,GAEZ,IAAMQ,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,UAAhB,OAA2BL,KAM/BuB,EAAU,CACLC,WAAYvE,GACTwE,cAAevC,GACfxB,KAAMA,GACNF,SAAUA,GACVkE,aAAc3D,GACdiJ,WAAY1I,GACZ2I,SAAWzI,GAEXmD,SAASrE,GACTsE,wBAAyBhE,GAEzBiE,gBAAiBzC,GAKhB0C,WAAY/E,IAGrBuD,IAAM4G,KAAN,UAAc1G,IAAOC,QAArB,oBAAgDc,EAASnB,GACtDM,MAAK,SAAAsB,GACJ,GAAIA,EAAId,KAAKA,KAKV,OAJDtF,IACEqG,IAAK,4BAA6B,WACrC/B,QAAQC,IAAI,SAEH6B,EAAId,KAAKA,QAGlBC,OAAM,SAAAe,GACPhC,QAAQC,IAAI+B,QAw3CN,UAUD,kBAAC,WAAD,CAAUnC,GAAG,Q,6FC/jDX,SAASoH,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAK,IAAIG,EAAI,EAAGC,EAAO,IAAIH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAC5DC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GDFF,CAAkBJ,IEJZ,SAA0BM,GACvC,GAAIC,OAAOC,YAAYC,OAAOH,IAAkD,uBAAzCG,OAAOC,UAAUrE,SAASsE,KAAKL,GAAgC,OAAOL,MAAMW,KAAKN,GFGvF,CAAgBN,IGJpC,WACb,MAAM,IAAIa,UAAU,mDHGqC,GAJ3D","file":"static/js/14.dccf6ec5.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\nimport './loader.css'\r\nexport default class LoaderClass extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n        height={100}\r\n        width={100}\r\n        className=\"loader_position\"\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport './beautysalon.css'\r\nimport common from \"../../common/common\";\r\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\nimport { CheckboxToggle } from 'react-rainbow-components';\r\nimport LoaderClass from '../../loader/loader'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\nimport {\r\n  InputGroupText,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardBody,\r\n  Card,\r\n  CardTitle,\r\n  FormText,\r\n  Form,\r\n  CustomInput,\r\n  Label,\r\n  UncontrolledAlert,\r\n  UncontrolledTooltip,\r\n  Alert,\r\n  ButtonToggle,\r\n  InputGroupAddon,\r\n  InputGroup\r\n} from 'reactstrap';\r\n\r\n          function Barber() {\r\n\r\n            const [indexes, setIndexes] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const addNewField = () => {\r\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\r\n    setCounter(prevCounter => prevCounter + 1);\r\n  };\r\n\r\n  const removeNewField = index => () => {\r\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\r\n    setCounter(prevCounter => prevCounter - 1);\r\n  };\r\n\r\n  \r\n\r\n  const [modal3, setModal3] = useState(false);\r\n  const [modal4, setModal4] = useState(false);\r\n  const [modal2, setModal2] = useState(false);\r\n  const [modal5, setModal5] = useState(false);\r\n  const [notify1, setNotify1] = useState(false);\r\n\r\n  const toggle4 = () => setModal4(!modal4);\r\n  const toggle3 = () => setModal3(!modal3);\r\n  const toggle2 = () => setModal2(!modal2);\r\n  const toggle5 = () => setModal5(!modal5);\r\n\r\n\r\n  const [list, setList] = useState([]);\r\n  \r\n  const [barberInformation, setbarberInformation] = useState([]);\r\n  const [PolicyList, setPolicyList] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n\r\n\r\n  //add form for Pub\r\n \r\n  const [checkTogglechildsuit, setCheckTogglechildsuit] = useState(false);\r\n  const [checkTogglechildrate, setCheckTogglechildrate] = useState(false);\r\n  const [checkTogglegroupbook, setCheckTogglegroupbook] = useState(false);\r\n  const [checkTogglegroupforchild, setCheckTogglegroupforchild] = useState(false);\r\n  const [checkToggledayrate, setCheckToggledayrate] = useState(false);\r\n  \r\n  const [checkTogglehalfday, setCheckTogglehalfday] = useState(false);\r\n  const [checkTogglefullday, setCheckTogglefullday] = useState(false);\r\n\r\n  \r\n  const [fineprint, setfineprint] = useState(\"\");\r\n  \r\n  const [musictypeoffer, setmusictypeoffer] = useState(\"\");\r\n  const [placeName, setPlaceName] = useState(\"\");\r\n  const [getSalonInformation, setgetSalonInformation] = useState(\"\");\r\n  const [Catogery, setCatogery] = useState(\"\"); \r\n  const [Pubcatogery, setPubcatogery] = useState(\"\"); \r\n  const [district, setDistrict] = useState(\"\"); \r\n   \r\n  const [town, setTown] = useState(\"\");  \r\n  const [salonDescription, setsalonDescription] = useState(\"\");\r\n const [Placetype, setPlacetype] = useState([]);\r\n   \r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [startdeal, setstartdeal] = useState(\"\");\r\n  const [enddeal, setenddeal] = useState(\"\");\r\n  const [dealOfferning, setdealOfferning] = useState(\"\");\r\n  const [CatogeryError, setCatogeryError] = useState('');\r\n  const [PlaceError, setPlaceError] = useState('');\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [VoucherDate, setVoucherDate] = useState(new Date());\r\n \r\n  const [checkTogglediscount, setCheckTogglediscount] = useState(false);\r\n  const [checkToggledeal, setcheckToggledeal] = useState(false);\r\n  const [checkToggleinfant, setCheckToggleinfant] = useState(false);\r\n  const [checkToggledealpublish, setcheckToggledealpublish] = useState(false);\r\n \r\n  const [address, setaddress] = useState('');\r\n  const [additionalinfo, setadditionalinfo] = useState('');\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchbyName, setSearchbyName] = useState(\"\");\r\n \r\n const catogeryOptions = [\r\n    { label: 'Barber', value:\"Barber\"},\r\n    { label: 'Beauty salon', value: 'Beauty salon' },\r\n      { label: 'Wellness Center', value: 'Wellness Center' },\r\n    { label: 'Gym', value: 'Gym'},\r\n    { label: 'Massege', value: 'Massege'},\r\n  ];\r\n    \t\r\n\t  \r\n  const addFriend123 = () => {\r\n   setIndexes(prevIndexes => [...prevIndexes, counter]);\r\n     setCounter(prevCounter => prevCounter + 1);\r\n   };\r\n   const addFriend = () => {\r\n   setIndexes(prevIndexes => [...prevIndexes, counter]);\r\n   setCounter(prevCounter => prevCounter + 1);\r\n   };\r\n   const removeFriend = index => () => {\r\n  setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\r\n   setCounter(prevCounter => prevCounter - 1);\r\n   };\r\n    const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\tconsole.log(Placetype);\r\n\t  let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/, '');\r\n    console.log(token);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n\t\r\n     \r\n\r\nlet payload = {\r\n\t        place_name: placeName,\r\n            place_address: address ,\r\n            town: town,\r\n            district: district,\r\n            phone_number: mobile,\r\n            start_date :startDate,\r\n            end_date : endDate,\r\n            // opening_hours: openinghours,\r\n            category:Pubcatogery,\r\n            place_short_description: salonDescription,\r\n            // highlights: hightights,\r\n            additional_info: additionalinfo,\r\n            // post_deal_status: 1,\r\n            // offer_deals: null,\r\n             // what_allowed: allowed,\r\n             // not_suitable_for: notsuitablefor,\r\n             fine_print: fineprint,\r\n            \r\n\t}\r\n    axios.post(`${common.api_url}barberbeautyshop`, payload, config)\r\n      .then(res => {\r\n        if (res.data.data) {\r\n          toggle3(false)\r\n            swal(\"Salon Added Successfully!\", \"success\");\r\n\t\t      \tconsole.log(\"hello\");\r\n          // getData();\r\n           return res.data.data;\r\n          // history.push('/rooms', roomModel)\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n    // history.push('/rooms', roomModel);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n     getData();\r\n     // getListing();\r\n     getPolicyData();\r\n   }, [])\r\n   const getData = () => {\r\n     let token = localStorage.getItem(\"key\");\r\n     if (token) {\r\n       var token1 = token.replace(/\"/g, \"\");\r\n       console.log(token);\r\n     } else {\r\n       return <Redirect to='/' />\r\n\r\n     }\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'applicatio/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}barberbeautyshop`, config).then((response) => {\r\n       var dataJson = JSON.stringify(response);\r\n       var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n         setList(jsonPrser.data.data)\r\n        setLoader(false)\r\n\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n     });\r\n   }\r\n      \r\n   const getPolicyData = () => {\r\n    let token = localStorage.getItem(\"key\");\r\n    if (token) {\r\n      var token1 = token.replace(/\"/g, \"\");\r\n        } else {\r\n      return <Redirect to='/' />\r\n\r\n    }\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'applicatio/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}dealPolicy`, config).then((response) => {\r\n      var dataJson = JSON.stringify(response);\r\n      var jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setPolicyList(jsonPrser.data.data)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n  }\r\n\r\n\r\n  const removeData = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    console.log(token);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.delete(`${common.api_url}barberbeautyshop/${id}`, config)\r\n      .then(res => {\r\n        if (res) {\r\n          toggle4(false);\r\n          swal(\"Pub deleted Successfully!\");\r\n          getData();\r\n          const users = res.data;\r\n          this.setState({ users });\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n   const viewData = (id) => {\r\n     console.log(id);\r\n     let token = localStorage.getItem(\"key\");\r\n     var token1 = token.replace(/\"/g, \"\");\r\n     console.log(token);\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}barberbeautyshop/${id}`, config).then((response) => {\r\n       let dataJson = JSON.stringify(response);\r\n       let jsonPrser = JSON.parse(dataJson);\r\n       if (jsonPrser.status == 200) {\r\n         setbarberInformation(jsonPrser.data.data)\r\n         toggle2(true)\r\n         if(jsonPrser.data.data.id != null){\r\n          if(jsonPrser.data.data.id != null){\r\n            var formate = moment(jsonPrser.data.data.end_data).format('LL h:mm:ss')\r\n            var srt1 = formate.toString();\r\n            var countDownDate = new Date(srt1).getTime();\r\n            console.log(countDownDate,\"222222222222\",srt1)\r\n           // Update the count down every 1 second\r\n            var x = setInterval(function() {\r\n         \r\n           // Get today's date and time\r\n           var formate1 = moment(jsonPrser.data.data.end_data).format('LL h:mm:ss')\r\n           var srt2 = formate1.toString();\r\n           //var countDownDate = new Date(srt1).getTime();\r\n           var now = new Date().getTime();\r\n            // Find the distance between now and the count down date\r\n            var distance = countDownDate - now;\r\n              console.log(distance,'uuuuuuuuuuuuuu')\r\n            // Time calculations for days, hours, minutes and seconds\r\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n              \r\n            // Output the result in an element with id=\"demo\"\r\n            if( document.getElementById(\"demo\") != null){\r\n           \r\n            document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\r\n            + minutes + \"m \" + seconds + \"s \";\r\n           //  console.log(days,hours,\"============\",minutes,seconds)\r\n            // If the count down is over, write some text \r\n            if (distance < 0) {\r\n              clearInterval(x);\r\n              document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\r\n            }\r\n           }\r\n          }, 1000);\r\n           }\r\n         }\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n\r\n     });\r\n\r\n   }\r\n  const viewForDeleteData = (id) => {\r\n     console.log(id);\r\n     let token = localStorage.getItem(\"key\");\r\n     var token1 = token.replace(/\"/g, \"\");\r\n     console.log(token);\r\n     const config = {\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n         'Accept': 'application/json',\r\n         'Authorization': `Bearer ${token1}`\r\n       }\r\n     };\r\n     axios.get(`${common.api_url}barberbeautyshop/${id}`, config).then((response) => {\r\n       let dataJson = JSON.stringify(response);\r\n       let jsonPrser = JSON.parse(dataJson);\r\n       if (jsonPrser.status == 200) {\r\n         setbarberInformation(jsonPrser.data.data)\r\n         toggle4(true)\r\n       }\r\n     }).catch((error) => {\r\n       console.log(error, 'errror');\r\n\r\n     });\r\n\r\n   }\r\n\r\n  const GetPlaceById = (id) => {\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    console.log(token);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n    axios.get(`${common.api_url}barberbeautyshop/${id}`, config).then((response) => {\r\n      let dataJson = JSON.stringify(response);\r\n      let jsonPrser = JSON.parse(dataJson);\r\n      if (jsonPrser.status == 200) {\r\n        setgetSalonInformation(jsonPrser.data.data)\r\n        setPlaceName(jsonPrser.data.data.place_name);\r\n        setCatogery(jsonPrser.data.data.category);\r\n        setMobile(jsonPrser.data.data.phone_number);\r\n        setTown(jsonPrser.data.data.town);\r\n              setDistrict(jsonPrser.data.data.district);\r\n              setaddress(jsonPrser.data.data.place_address);\r\n        console.log(getSalonInformation);\r\n        toggle5(true)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error, 'errror');\r\n    });\r\n\r\n  }\r\n  \r\n \r\n  const UpdateSalonById = (id) => {\r\n\t    // console.log(id);\r\n  //  var equipped = roomequipped.toString();\r\n    let token = localStorage.getItem(\"key\");\r\n    var token1 = token.replace(/\"/g, \"\");\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': `Bearer ${token1}`\r\n      }\r\n    };\r\n         let payload={\r\n            place_name: placeName,\r\n            place_address: address ,\r\n            town: town,\r\n            district: district,\r\n            phone_number: mobile,\r\n            category:Pubcatogery,\r\n            place_short_description: salonDescription,\r\n            // highlights: hightights,\r\n            additional_info: additionalinfo,\r\n            // post_deal_status: 1,\r\n            // offer_deals: null,\r\n             // what_allowed: allowed,\r\n             // not_suitable_for: notsuitablefor,\r\n             fine_print: fineprint\r\n\t}\r\n\t\r\n\t\r\n    axios.put(`${common.api_url}barberbeautyshop/${id}`, payload, config)\r\n      .then(res => {\r\n        if (res) {\r\n          toggle5(false);\r\n\t\t  getData()\r\n          swal(\"salon Updated Successfully!\", \"success\");\r\n          return res.data.data;\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  let role = localStorage.getItem(\"role\");\r\n  let isLoggedIn = localStorage.getItem(\"IsLoggedIn\")\r\n  if (role && isLoggedIn) {\r\n    if (loader == true) {\r\n      return (\r\n        <Fragment>\r\n          <LoaderClass className=\"loader_position\" />\r\n        </Fragment>\r\n      )\r\n    } else {\r\nreturn (\r\n\r\n        <Fragment>\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"content-header\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-6\">\r\n                    <h1 className=\"m-0\">Beauty Salon</h1>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <ol className=\"breadcrumb float-sm-right\">\r\n                      <li className=\"breadcrumb-item\"><Button className=\"m-2\" color=\"second\" data-toggle=\"modal\" onClick={toggle3} >\r\n                        Add salon\r\n                    </Button>\r\n                      </li>\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>\r\n\t\t\t\t\t\t\t               </th>\r\n                              <th></th>\r\n                            <th>\r\n                            {/* <input type=\"text\" className=\"form-control-sm\" placeholder=\"search by Role\" value={searchRole} onChange={(e=>searchRoleFun(e.target.value))} aria-label=\"Username\" /> */}\r\n\r\n                            </th>\r\n                            \r\n                            <th></th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Sl</th>\r\n                            <th>Action</th>\r\n                            <th>Mobile</th>\r\n                            <th>Place Address</th>\r\n                            <th>Catogery</th>\r\n                            <th>PlaceName</th>\r\n                          </tr>\r\n                        </thead>\r\n                        {list.filter((val) => {\r\n                          if (search && searchbyName == \"\") {\r\n                            return val;\r\n                           } else\r\n                  //  if (val.placeName.includes(search) ||  val.email == searchbyName) \r\n\t\t\t\t\t\t   {\r\n                            return val;\r\n                          }\r\n                        }).map((data, index) =>\r\n                          <tbody key={index}>\r\n                            <tr>\r\n                              <td>{index+1}</td>\r\n                              <td>  <FontAwesomeIcon\r\n                                icon={['far', 'edit']}\r\n                                className=\"font-size-xxl\"\r\n                               placement=\"top\"\r\n                                style={{fontSize:15,color:'#0AEE23'}}\r\n                                onClick={() => GetPlaceById(data.id)}\r\n                                id=\"tooltipforedit\"\r\n                                outline={data.id} />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipforedit\">\r\n                                  edit\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                         <FontAwesomeIcon\r\n                                  icon={['far', 'trash-alt']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#EE180A '}}\r\n                                  id=\"tooltipfordelete\"\r\n                                  value={data.id}\r\n                                  onClick={() => viewForDeleteData(data.id)}\r\n                                  outline={data.id}\r\n                                />\r\n                                <UncontrolledTooltip\r\n                                  placement=\"top\"\r\n                                  container=\"body\"\r\n                                  target=\"tooltipfordelete\">\r\n                                  delete\r\n                      </UncontrolledTooltip>&nbsp; &nbsp;\r\n                        <FontAwesomeIcon\r\n                                  icon={['far', 'eye']}\r\n                                  className=\"font-size-xxl\"\r\n                                  placement=\"top\"\r\n                                  style={{fontSize:15,color:'#0710CD '}}\r\n                                  id=\"tooltipforview\"\r\n                                  outline={data.id} onClick={() => viewData(data.id)} /> <UncontrolledTooltip\r\n                                    placement=\"top\"\r\n                                    container=\"body\"\r\n                                    target=\"tooltipforview\">\r\n                                  view\r\n                     </UncontrolledTooltip></td>\r\n                              <td>{data.phone_number}</td>\r\n                              <td>{data.town}</td>\r\n                              <td>{data.place_address}</td>\r\n                              <td>{data.place_name}</td>\r\n                               <td className={common.status[data.status_id]}>{common.status[data.status_id]}</td> \r\n                          \r\n                              {/* edit section for pub */}\r\n                                                           <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal5} toggle={toggle5}>\r\n                                <ModalHeader toggle={toggle5}>Edit Place</ModalHeader>\r\n                                <ModalBody>\r\n\r\n\r\n                                  <Form onclick={() => UpdateSalonById(data.id)}>\r\n                                    <FormGroup row>\r\n                                   \r\n                                      <Label htmlFor=\"personCapacity\" sm={1}>Place Name</Label>\r\n                                    <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          id=\"placeName\"\r\n                                          name=\"customSelect\"\r\n\t\t\t\t\t\t\t\t\t\t  defaultValue={getSalonInformation.place_name}\r\n\t\t\t\t\t\t\t\t\t\t  value={placeName}\r\n                                          onChange={e => setPlaceName(e.target.value)}\r\n\r\n                                        />\r\n                                      </Col>\r\n\r\n                        \r\n                                      <Label htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                                      Catogery\r\n                                   </Label>\r\n                                      <Col sm={3}>\r\n\t\t\t\t\t\t\t\t\t\t      <CustomInput\r\n                                             type=\"select\"\r\n                                             name=\"customSect\"\r\n                                             id={\"exampleCustomMutlipleSelect\"}\r\n                                             value={Pubcatogery.id}\r\n\t\t\t\t\t\t\t\t\t\t\t defaultValue={getSalonInformation.category}\r\n                                             onChange={e => setPubcatogery(e.target.value)}>\r\n                                            <option >Select Place</option>\r\n                                            {catogeryOptions.map((data, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={data.value}>{data.label}</option>\r\n                                         )};\r\n                                        </CustomInput>\r\n\r\n                                      </Col>\r\n\t\t\t\t\t\t\t\t\t   <Label htmlFor=\"personCapacity\" sm={1}>\r\n                                     Phone Number\r\n                                     </Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"number\"\r\n                                          id=\"mobileNo\"\r\n                                          value={mobile}\r\n                                          defaultValue={getSalonInformation.phone_number}\r\n                                          onChange={e => setMobile(e.target.value)}\r\n\r\n\r\n                                        />\r\n                                      </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n\t\t\t\t\t\t\t\t\t <Label htmlFor=\"examplePropertyName\" sm={1}>Place Address</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          name=\"title\"\r\n                                          id=\"address\"\r\n\t\t\t\t\t\t\t\t\t\t  value={address}\r\n\t\t\t\t\t\t\t\t\t\t    defaultValue={getSalonInformation.place_address}\r\n                                          onChange={e => setaddress(e.target.value)}\r\n                                        />\r\n                                      </Col>\r\n\t\t\t\t  <Label htmlFor=\"examplePropertyName\" sm={1}>Town</Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          name=\"title\"\r\n                                          id=\"town\"\r\n                                          defaultValue={getSalonInformation.town}\r\n\t\t\t\t\t\t\t\t\t\t   value={town}\r\n                                             onChange={e => setTown(e.target.value)}\r\n                                        />\r\n                                      </Col>\r\n\t\t\t\t\t\t\t\t\t  \r\n                                     <Label htmlFor=\"personCapacity\" sm={1}>District\r\n                            </Label>\r\n                                      <Col sm={3}>\r\n                                        <Input\r\n                                          type=\"text\"\r\n                                          id=\"district\"\r\n                                           value={district}\r\n                                           defaultValue={getSalonInformation.district}\r\n                                           onChange={e => setDistrict(e.target.value)}              \r\n                                        />\r\n                                      </Col>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n                                    \r\n                                  </Form>\r\n                                </ModalBody>\r\n\r\n                                <ModalFooter>\r\n                                   <Button color=\"primary\" className=\"ml-auto\" onClick={() => UpdateSalonById(data.id)}>\r\n                                  Update\r\n          </Button>\r\n                                </ModalFooter>\r\n                              </Modal>\r\n\r\n                              {/* edit section  finish here */}\r\n                            </tr>\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Modal className=\"custom_model_size\" zIndex={2000} centered scrollable isOpen={modal2} size=\"lg\" toggle={toggle2}>\r\n            <ModalHeader toggle={toggle2}>Information Of place</ModalHeader>\r\n            <ModalBody className=\"text-center\">\r\n              <Form>\r\n              <FormGroup row>\r\n                  <Col sm={10}>\r\n                  <div id=\"demo\"></div>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Place Name :</Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.place_name ?\r\n                      barberInformation.place_name\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"examplePropertyName\" sm={1}>openingHours</Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.close_mu_time ?\r\n                      barberInformation.close_mu_time\r\n                      : ('Null')}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup row >\r\n                  <Label className='view_head' htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Catogery :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.category ?\r\n                      barberInformation.category\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>\r\n                    Mobile No. :\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.phone_number ?\r\n                      barberInformation.phone_number\r\n                      : ('Null')}\r\n                  </Col>\r\n              \r\n                </FormGroup>\r\n                 \r\n                <h3>Address</h3>\r\n                <FormGroup row>\r\n                  <Label className='view_head' htmlFor=\"personCapacity\" sm={1}>Town :</Label>\r\n                <Col sm={3}>\r\n                  {barberInformation.town}\r\n\r\n                </Col>\r\n\r\n                  <Label className='view_head' htmlFor=\"hotelType\" sm={1}>District  :</Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.district ?\r\n                      barberInformation.district\r\n                      : ('Null')}\r\n                  </Col>\r\n\t\t\t\t    <Label className='view_head' htmlFor=\"hotelType\" sm={1}>Address  :</Label>\r\n                  <Col sm={3}>\r\n                    {barberInformation.place_address ?\r\n                      barberInformation.place_address\r\n                      : ('Null')}\r\n                  </Col>\r\n\r\n                </FormGroup>\r\n              </Form>\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle2}>\r\n                Close\r\n          </Button>{' '}\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal zIndex={2000} centered size=\"sm\" isOpen={modal4} toggle={toggle4}>\r\n            <ModalHeader toggle={toggle4}>Delete Place</ModalHeader>\r\n            <ModalBody>\r\n              <p>Are you sure Want To Delete {barberInformation.place_name}?\r\n                              </p>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle4}>\r\n                Close\r\n                                 </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={() => removeData(barberInformation.id)}>\r\n                Delete\r\n                               </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n\r\n \r\n\r\n          <Modal zIndex={2000} centered className=\"custom_model_size\" isOpen={modal3} toggle={toggle3} backdrop=\"static\" keyboard={false}>\r\n            <ModalHeader toggle={toggle3}>Add Place</ModalHeader>\r\n            <ModalBody>\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Place Name</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"placeName\"\r\n                      name=\"customSelect\"\r\n                      // placeholder={getuserInformation.placeName}\r\n                      value={placeName}\r\n                      onChange={e => setPlaceName(e.target.value)}\r\n                    />\r\n                    {PlaceError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {PlaceError}\r\n                      </Label>\r\n                    ) : null}\r\n                  </Col>\r\n\t\t\t\t   <Label htmlFor=\"hotelType\" sm={1}>Address</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"address\"\r\n                      name=\"customSelect\"\r\n                      value={address}\r\n                      onChange={e => setaddress(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\t\t\t\t    <Label htmlFor=\"personCapacity\" sm={1}>\r\n                 Phone Number\r\n                    </Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"number\"\r\n                      id=\"mobileNo\"\r\n                      name=\"customSelect\"\r\n                      value={mobile}\r\n                      onChange={e => setMobile(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\r\n               \r\n    </FormGroup>\r\n\t   \r\n                <FormGroup row>\r\n                  <Label htmlFor=\"personCapacity\" sm={1}>Town</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"town\"\r\n                      value={town}\r\n                      onChange={e => setTown(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Label htmlFor=\"hotelType\" sm={1}>District</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"district\"\r\n                      name=\"customSelect\"\r\n                      value={district}\r\n                      onChange={e => setDistrict(e.target.value)}\r\n                    />\r\n                  </Col>\r\n\t\t\t\t \r\n                </FormGroup>\r\n\t\t\t\t\r\n                    <Row>\r\n                           <Label htmlFor=\"examplePropertyName\" sm={2}>Opening hours</Label>\r\n\t\t\t\t\t\t   <br/>\r\n\t\t\t\t\t\r\n                    </Row>\r\n                    <FormGroup>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Monday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Tuesday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Wednesday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Thursday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Friday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Saturday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col sm={1}>\r\n                          <input type=\"checkbox\" value=\"\" />\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                          <label>\r\n                            Sunday\r\n                        </label>\r\n                        </Col>\r\n                        <Label htmlFor=\"room_number\" sm={2}>Starting and Closing Time</Label>\r\n                        <Col sm={4}>\r\n                          <Input\r\n                            type=\"text\"\r\n                            id=\"room_xy_dimensions\"\r\n                            name=\"room_xy_dimensions\" placeholder=\"e.g From 9.00pm till 01.00 am\"\r\n                          />\r\n\r\n                        </Col>\r\n                      </Row>\r\n                    </FormGroup>\r\n\t\t\t\t\t\r\n                <FormGroup row>\r\n                          \r\n                  <Label htmlFor=\"exampleCustomMutlipleSelect\" sm={1}>\r\n                    Catogery\r\n                    </Label>\r\n                  <Col sm={2}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t      <CustomInput\r\n                                             type=\"select\"\r\n                                             name=\"customSect\"\r\n                                             id={\"exampleCustomMutlipleSelect\"}\r\n                                             value={Pubcatogery.id}\r\n                                             onChange={e => setPubcatogery(e.target.value)}>\r\n                                            <option >Select Place</option>\r\n                                            {catogeryOptions.map((data, index) =>\r\n                                         <option key={index} value={data.value}>{data.label}</option>\r\n                                         )};\r\n                                        </CustomInput>\r\n                    {CatogeryError != '' ? (\r\n                      <Label style={{ color: \"red\" }}>\r\n                        {CatogeryError}\r\n                      </Label>\r\n                    ) : null}\r\n                  </Col>    \r\n              \r\n                <Label htmlFor=\"exampleTitle\" sm={2}>Write a short discription about palce</Label>\r\n                                 <Col sm={3}>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"additionalinfo\"\r\n                      id=\"additionalinfo\"\r\n                      value={salonDescription}\r\n                      onChange={e => setsalonDescription(e.target.value)}\r\n                    />\r\n                  </Col>   \r\n               <Label htmlFor=\"examplePropertyName\" sm={1}>Additional Information</Label>\r\n                  <Col sm={3}>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"additionalinfo\"\r\n                      id=\"additionalinfo\"\r\n                      value={additionalinfo}\r\n                      onChange={e => setadditionalinfo(e.target.value)}\r\n                    />\r\n                  </Col>                 \r\n              \r\n         \r\n\t\t     </FormGroup>\r\n         <FormGroup row>\r\n\t\t\t\t\t\r\n          <Label htmlFor=\"exampleMusic\" sm={2}>Do you want to publish a deal?</Label>\r\n                    <Col sm={1}>\r\n                      <CheckboxToggle\r\n                        value={checkToggledealpublish}\r\n                        onChange={e => setcheckToggledealpublish(checkToggledealpublish == false ? true : false)}\r\n    \r\n                      />\r\n              </Col>\r\n              </FormGroup>\r\n              {checkToggledealpublish == true ? ( \r\n              <>\r\n            <FormGroup row>\r\n            <Label htmlFor=\"hotelType\" sm={1}>What are you offerning with this deal .</Label>\r\n                      <Col sm={3}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"district\"\r\n                          name=\"customSelect\"\r\n                          value={dealOfferning}\r\n                          onChange={e => setdealOfferning(e.target.value)}\r\n                        />\r\n                      </Col>\r\n              <Label htmlFor=\"hotelType\" sm={2}>The fine Print (to write the condition)</Label>\r\n                      <Col sm={6}>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          id=\"fineprint\"\r\n                          name=\"fineprint\"\r\n                          value={fineprint}\r\n                          placeholder=\"One deal per person/ Price is based on two people sharing etc,, so you will need to buy 2 deals vouchers May buy multiples as gifts Voucher valid untill\"\r\n                          onChange={e => setfineprint(e.target.value)}\r\n                        />\r\n                      </Col>\r\n            </FormGroup>\r\n            <Card>\r\n                    <CardBody>\r\n                      <Label for=\"RulesAllowed\" sm={12}><h3>What is allowed:</h3></Label>\r\n                      <FormGroup row>\r\n                        <br />\r\n                        <Col sm={4}>\r\n                          <label><input type=\"checkbox\" value=\"yes\" />\r\n                             Smoking allowed:\r\n                           </label>\r\n                        </Col>\r\n                        <Col sm={5}>\r\n                          <Input type=\"text\"\r\n                            name=\"rulesomkeArea\"\r\n                            id=\"rulesomkeArea\"\r\n                            placeholder=\"If yes,mentioned where can they smoke.\" />\r\n                        </Col>\r\n                      </FormGroup>\r\n    \r\n                      <FormGroup row>\r\n                        <Col sm={4}>\r\n                          <label><input type=\"checkbox\" value=\"yes\" />\r\n              Events or parties allowed :\r\n                            </label>\r\n                        </Col>\r\n                        <Col sm={5}>\r\n                          <Input type=\"text\"\r\n                            name=\"rulepartiesQuiteHour\"\r\n                            id=\"rulepartiesQuiteHour\"\r\n                            placeholder=\"If checked, Tell us what are the quiet hours .\" />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <Col sm={4}>\r\n                          <label><input type=\"checkbox\" value=\"yes\" />\r\n              Guests can receive Visitors\r\n                            </label>\r\n                        </Col>\r\n    \r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <Col sm={4}>\r\n                          <label><input type=\"checkbox\" value=\"yes\" />\r\n                          You are responsible to keep anything that you're provided with in the host in the same condition.  If there is any damage to the property or to any of the items you will be asked to pay for it:\r\n                            </label>\r\n                        </Col>\r\n    \r\n                      </FormGroup>\r\n    \r\n                      <FormGroup row>\r\n                        <Col sm={4}>\r\n                          <Label><input type=\"checkbox\" value=\"yes\" />\r\n             Children allowed - Suitable for Kids </Label> \r\n                      </Col>\r\n    \r\n              <Label htmlFor=\"PoliceStation\" sm={2}>Age From</Label>\r\n              <Col sm={2}>\r\n                <Input type=\"number\"\r\n                  name=\"child_pay\"\r\n                  id=\"child_pay\"\r\n                  placeholder=\"\" />\r\n    \r\n              </Col> \t<Label htmlFor=\"PoliceStation\" sm={1}>Age To</Label>\r\n              <Col sm={2}>\r\n                <Input type=\"number\"\r\n                  name=\"child_pay\"\r\n                  id=\"child_pay\"\r\n                  placeholder=\"\" />\r\n              </Col>\r\n              <Col sm={5}>\r\n              <Label>if no why </Label>\r\n              <Input type=\"text\"\r\n                name=\"rulekidsAge\"\r\n                id=\"rulekidsAge\"\r\n                placeholder=\"If no why, Tell us  .\" />\r\n            </Col>\r\n             </FormGroup>\r\n              {indexes.map(index => {\r\n                const fieldName = `friends[${index}]`;\r\n                return (\r\n                  <>\r\n                    <FormGroup row>\r\n                      <Label htmlFor=\"exampleTitle\" sm={2}>Add Additional Information</Label>\r\n                      <Col sm={4}>\r\n                        <Input type=\"textarea\"\r\n                          name=\"ShortDescription\"\r\n                          id=\"exampleText\"\r\n                          placeholder=\"Add any information\" />\r\n    \r\n                      </Col>\r\n                    </FormGroup>\r\n                  </>\r\n                        );\r\n                      })}\r\n                      <br />\r\n                      <FormGroup className=\"add_my_new_info\">\r\n    \r\n                        <Button color=\"primary\" className=\"ml-auto add_my_new_info_btn\">\r\n                          ADD ADDITIONAL INFORMATION\r\n                       </Button>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n                    <Card>\r\n                    <CardBody>\r\n                    <h3>Deal Duration</h3>\r\n                      <FormGroup row>\r\n                      <Col sm={3}>\r\n                       <DatePicker\r\n                       id=\"datestartpicker\"\r\n                        placeholderText=\"Select Start Date\"\r\n                        showTimeSelect\r\n                        dateFormat=\"MMMM d, yyyy h:mmaa\"\r\n                        selected={startDate}\r\n                        selectsStart\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onChange={date => setStartDate(date)}\r\n                    />\r\n                    </Col>\r\n                    <Label htmlFor=\"personCapacity\" sm={1}>End deal</Label>\r\n                    <Col sm={3}>\r\n                    <DatePicker\r\n                     id=\"datestartpicker\"\r\n                      placeholderText=\"Select End Date\"\r\n                      showTimeSelect\r\n                      dateFormat=\"MMMM d, yyyy h:mmaa\"\r\n                      selected={endDate}\r\n                      selectsEnd\r\n                      startDate={startDate}\r\n                      endDate={endDate}\r\n                      minDate={startDate}\r\n                      onChange={date => setEndDate(date)}\r\n                    />\r\n                    </Col> \r\n                    <Label htmlFor=\"personCapacity\" sm={2}>When does the voucher need to be used by: Date before Time</Label>\r\n                    <Col sm={3}>\r\n                    <DatePicker\r\n                     id=\"datestartpicker\"\r\n                     selected={VoucherDate} \r\n                     onChange={(date) => setVoucherDate(date)} />\r\n                    </Col> \r\n                      </FormGroup>\r\n                    </CardBody>\r\n                    </Card>\r\n    \r\n                  <Card>\r\n                    <CardBody>\r\n                      <FormGroup row>\r\n                        <Label htmlFor=\"DiscountLongStay\" sm={2}>Do you offer any discount on Long Stay?</Label>\r\n                        <Col sm={1}>\r\n                          <CheckboxToggle\r\n                            value={checkTogglediscount}\r\n                            onChange={e => setCheckTogglediscount(checkTogglediscount == false ? true : false)}\r\n    \r\n                          />\r\n                        </Col>\r\n                        {checkTogglediscount == true ? (\r\n                          <>\r\n                            <Label htmlFor=\"DiscountCode\" sm={2}>Create Discount code</Label>\r\n                            <Col sm={3}>\r\n                              <Input type=\"text\"\r\n                                name=\"discountCodeLongStay\"\r\n                                id=\"discountCodeLongStay\"\r\n                                placeholder=\"enter codes\" />\r\n                            </Col>\r\n                          </>\r\n                        ) : ''}\r\n                      </FormGroup>\r\n                      {indexes.map(index => {\r\n                        const fieldName = `friends[${index}]`;\r\n                        return (\r\n                          <>\r\n                            <FormGroup row>\r\n                              <Label htmlFor=\"exampleTitle\" sm={2}>Add Additional Information</Label>\r\n                              <Col sm={4}>\r\n                                <Input type=\"textarea\"\r\n                                  name=\"ShortDescription\"\r\n                                  id=\"exampleText\"\r\n                                  placeholder=\"Add any information\" />\r\n    \r\n                              </Col>\r\n                            </FormGroup>\r\n                          </>\r\n                        );\r\n                      })}\r\n                      <br />\r\n                      <FormGroup className=\"add_my_new_info\">\r\n    \r\n                        <Button color=\"primary\" className=\"ml-auto add_my_new_info_btn\">\r\n                          ADD ADDITIONAL INFORMATION\r\n                        </Button>\r\n                      </FormGroup>\r\n              </CardBody>\r\n                    </Card>\r\n             <Card>\r\n                    <CardBody>\r\n                      <Label for=\"guest_rate\" sm={12}><h3>Let’s set the rate for your Guest</h3></Label>\r\n    \r\n                      <FormGroup row>\r\n    \r\n                        <Label htmlFor=\"exampleTitle\" sm={4}>Adult will pay (per person per night include VAT)</Label>\r\n    \r\n                        <Col sm={2}>\r\n                          <Input type=\"number\"\r\n                            name=\"adult_pay\"\r\n                            id=\"adult_pay\"\r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n    \r\n                        <Label htmlFor=\"exampleTitle\" sm={4}>Is it suitable for Children\r\n                         (If you want to offer a Group rate instead then do not choose )</Label>\r\n                        <Col sm={1}>\r\n                          <CheckboxToggle\r\n                            value={checkTogglechildsuit}\r\n                            onChange={e => setCheckTogglechildsuit(checkTogglechildsuit == false ? true : false)}\r\n    \r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n    \r\n                      {checkTogglechildsuit == true ? (\r\n                        <>\r\n                          <FormGroup row>\r\n    \r\n                            <Label htmlFor=\"exampleTitle\" sm={4}>Do you have a special rate for Children\r\n                   </Label>\r\n                            <Col sm={1}>\r\n                              <CheckboxToggle\r\n                                value={checkTogglechildrate}\r\n                                onChange={e => setCheckTogglechildrate(checkTogglechildrate == false ? true : false)}\r\n    \r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n    \r\n                          {checkTogglechildrate == true ? (\r\n                            <>\r\n                              <FormGroup row>\r\n    \r\n    \r\n                                <Label htmlFor=\"PoliceStation\" sm={2}>Child (including VAT)</Label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col> \t<Label htmlFor=\"PoliceStation\" sm={1}>Per night</Label>\r\n                                <Label htmlFor=\"PoliceStation\" sm={1}>Age from</Label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><label>To</label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><span>Year(s)</span>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Label htmlFor=\"PoliceStation\" sm={4}>Infant</Label>\r\n                                <Col sm={1}>\r\n                          <CheckboxToggle\r\n                            value={checkToggleinfant}\r\n                            onChange={e => setCheckToggleinfant(checkToggleinfant == false ? true : false)}\r\n                         />\r\n                        </Col>\r\n                        </FormGroup>\r\n                        {checkToggleinfant == true ? (\r\n                            <>\r\n                              <FormGroup row>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"text\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"free\" value=\"Free\" readonly />\r\n    \r\n                                </Col><Label htmlFor=\"PoliceStation\" sm={1}></Label>\r\n                                <Label htmlFor=\"PoliceStation\" sm={1}>Age from</Label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><label>To</label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><span>Year(s)</span>\r\n    \r\n    \r\n                              </FormGroup>\r\n                              </>\r\n                          ) : ''}\r\n                            </>\r\n                          ) : ''}\r\n                        </>\r\n                      ) : ''}\r\n    \r\n                      <FormGroup row>\r\n    \r\n                        <Label htmlFor=\"exampleTitle\" sm={4}>Do you offer a Group Booking rate\r\n    \r\n              </Label>\r\n                        <Col sm={1}>\r\n                          <CheckboxToggle\r\n                            value={checkTogglegroupbook}\r\n                            onChange={e => setCheckTogglegroupbook(checkTogglegroupbook == false ? true : false)}\r\n    \r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      {checkTogglegroupbook == true ? (\r\n                        <>\r\n                          <FormGroup row>\r\n    \r\n    \r\n                            <Label htmlFor=\"PoliceStation\" sm={2}>Guests</Label>\r\n                            <Label htmlFor=\"PoliceStation\" sm={0}> From </Label><Col sm={2}>\r\n                              <Input type=\"number\"\r\n                                name=\"child_pay\"\r\n                                id=\"child_pay\"\r\n                                placeholder=\"No. of guests\" />\r\n    \r\n                            </Col> <Label htmlFor=\"PoliceStation\" sm={0}> To </Label>\r\n                            <Col sm={2}>\r\n                              <Input type=\"number\"\r\n                                name=\"child_pay\"\r\n                                id=\"child_pay\"\r\n                                placeholder=\"No. of guests\" />\r\n    \r\n                            </Col>\r\n                            <Label htmlFor=\"PoliceStation\" sm={1}>Pay</Label>\r\n                            <Col sm={2}>\r\n                              <Input type=\"number\"\r\n                                name=\"child_pay\"\r\n                                id=\"child_pay\"\r\n                                placeholder=\"\" /> \r\n                            </Col><Label htmlFor=\"PoliceStation\" sm={2}>Per guest per night(including VAT)</Label>\r\n                          </FormGroup>\r\n                          <FormGroup className=\"add_my_new_info_group_booking\">\r\n    \r\n                      <Button color=\"primary\" className=\"ml-auto add_my_new_info_btn_group_booking\">\r\n                      ADD MORE RATE\r\n                      </Button>\r\n                      </FormGroup>\r\n                          <FormGroup row>\r\n    \r\n                            <Label htmlFor=\"exampleTitle\" sm={4}>Is it suitable for either children or infant</Label>\r\n                            <Col sm={1}>\r\n                              <CheckboxToggle\r\n                                value={checkTogglegroupforchild}\r\n                                onChange={e => setCheckTogglegroupforchild(checkTogglegroupforchild == false ? true : false)}\r\n    \r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          {checkTogglegroupforchild == true ? (\r\n                            <>\r\n                              <FormGroup row>\r\n                                <Label htmlFor=\"PoliceStation\" sm={2}>Suitable for children of age</Label>\r\n    \r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><label>To</label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><span>Year(s)</span>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Label htmlFor=\"PoliceStation\" sm={2}>Suitable for Infant of age</Label>\r\n    \r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><label>To</label>\r\n                                <Col sm={2}>\r\n                                  <Input type=\"number\"\r\n                                    name=\"child_pay\"\r\n                                    id=\"child_pay\"\r\n                                    placeholder=\"\" />\r\n    \r\n                                </Col><span>Year(s)</span>\r\n    \r\n                              </FormGroup>\r\n    \r\n    \r\n                            </>\r\n                          ) : ''}\r\n                        </>\r\n                  ) : ''}\r\n                    </CardBody>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardBody>\r\n                      <Label for=\"policy\" sm={3}><h3>Cancellation Policy </h3></Label>\r\n                      <FormGroup>\r\n                      <Row>\r\n                      <Col sm={10}>\r\n                    <Label sm={3}>Please select a cancellation option you wish to offer:</Label>\r\n                    </Col></Row>\r\n                        <Row>\r\n                        {PolicyList.map((data, index) =>\r\n                          <Col key={index} sm={10}>\r\n                       <Label style={{marginLeft:\"40px\"}}><input type=\"checkbox\"/>{data.description}</Label>\r\n                        </Col>\r\n                        )}\r\n                        </Row>\r\n                      </FormGroup> \r\n                    </CardBody>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Row>\r\n                          <Col sm={4}></Col>\r\n                          <h3 className=\"property_head text-center\">You are one step closer to publish your Listing!</h3>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                          <Col sm={1}></Col>\r\n                          <Col sm={10}>\r\n                            <p>We will review your Listing and once it is approved by our team you are good to go Live!  Once your Listing goes Live, Guests will be able to book straight away and you will start making sales.\r\n                        </p>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n                  <br />\r\n                  <Card>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Row>\r\n                          <Col sm={4}></Col>\r\n                          <h3 className=\"property_head text-center\"> Rules, Laws and Taxes</h3>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                          <Col sm={1}></Col>\r\n                          <Col sm={10}>\r\n                            <p>\r\n                              Please make sure that you are upto date with the laws in the country where you are listing your services.   </p>\r\n    \r\n                            <p>You are responsible with the decision for your listing, and to make sure that we are working in a fully trusted environment with all our users on this platform we require to review your listings before it goes live.  You are also advised to collect and remit your taxes in your respective countries where applicable.  </p>\r\n    \r\n                            <p>It is forbidden to encourage a Guest to go-past the Visit.mu platform and to book directly from you, or from your business website. </p>\r\n                            <p>Please do not share any email address, phone numbers or website URL on any of your email exchanges or even on your Listings.</p>\r\n                            <p> Once a Booking is confirmed your details will automatically be shared with the Guests. </p>\r\n                            <p> All work is done in full transparency and all messages are filtered and monitored.  Sometimes you will be tested by  random Guests to check if you are following the rules.   </p>\r\n    \r\n                            <p>By accepting the Terms and conditions, you agree that you will comply with the applicable laws and regulations in the country where your services are listed, and to our rules.\r\n    \r\n                        </p>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Row>\r\n                          <Col sm={4}></Col>\r\n                          <h3 className=\"property_head text-center\">And Finally… </h3>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                          <Col sm={1}></Col>\r\n                          <Col sm={10}>\r\n                            <p>We are reviewing your Listing and once it is completed you will be informed through email and your Listing will go Live.</p>\r\n    \r\n                            <p>You can add, edit, delete your Listing or settings by going in the Dashboard anytime! </p>\r\n                            <p>Read our FAQ, and if you have questions or feel free to email us  or Chat to one of our agent.</p>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n            </>\r\n              ) : ''}\r\n\t\t\t              </Form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"link\" className=\"btn-link-dark\" onClick={toggle3}>\r\n                Close\r\n          </Button>{' '}\r\n              <Button color=\"primary\" className=\"ml-auto\" onClick={handleSubmit}>\r\n                Add\r\n          </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </Fragment>\r\n       )\r\n   \r\n      }\r\n    } else {\r\n      return <Redirect to='/' />\r\n    }\r\n    \r\n    }\r\n\r\nexport default Barber;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}